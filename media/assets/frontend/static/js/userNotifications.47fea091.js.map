{"version":3,"file":"static/js/userNotifications.47fea091.js","mappings":"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","sources":["user-notifications.js"],"sourcesContent":["import React from 'react';\nimport ReactDom from 'react-dom';\nimport { navigate } from '@gatsbyjs/reach-router';\nimport { Utils } from './utils/utils';\nimport { gettext, siteRoot, mediaUrl, logoPath, logoWidth, logoHeight, siteTitle } from './utils/constants';\nimport { seafileAPI } from './utils/seafile-api';\nimport Loading from './components/loading';\nimport Paginator from './components/paginator';\nimport CommonToolbar from './components/toolbar/common-toolbar';\nimport NoticeItem from './components/common/notice-item';\n\nimport './css/toolbar.css';\nimport './css/search.css';\n\nimport './css/user-notifications.css';\n\nclass UserNotifications extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      errorMsg: '',\n      currentPage: 1,\n      perPage: 25,\n      hasNextPage: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    let urlParams = (new URL(window.location)).searchParams;\n    const {\n      currentPage, perPage\n    } = this.state;\n    this.setState({\n      perPage: parseInt(urlParams.get('per_page') || perPage),\n      currentPage: parseInt(urlParams.get('page') || currentPage)\n    }, () => {\n      this.getItems(this.state.currentPage);\n    });\n  }\n\n  getItems = (page) => {\n    const { perPage } = this.state;\n    seafileAPI.listNotifications(page, perPage).then((res) => {\n      this.setState({\n        isLoading: false,\n        items: res.data.notification_list,\n        currentPage: page,\n        hasNextPage: Utils.hasNextPage(page, perPage, res.data.count)\n      });\n    }).catch((error) => {\n      this.setState({\n        isLoading: false,\n        errorMsg: Utils.getErrorMsg(error, true) // true: show login tip if 403\n      });\n    });\n  }\n\n  resetPerPage = (perPage) => {\n    this.setState({\n      perPage: perPage\n    }, () => {\n      this.getItems(1);\n    });\n  }\n\n  onSearchedClick = (selectedItem) => {\n    if (selectedItem.is_dir === true) {\n      let url = siteRoot + 'library/' + selectedItem.repo_id + '/' + selectedItem.repo_name + selectedItem.path;\n      navigate(url, {repalce: true});\n    } else {\n      let url = siteRoot + 'lib/' + selectedItem.repo_id + '/file' + Utils.encodePath(selectedItem.path);\n      let newWindow = window.open('about:blank');\n      newWindow.location.href = url;\n    }\n  }\n\n  markAllRead = () => {\n    seafileAPI.updateNotifications().then((res) => {\n      this.setState({\n        items: this.state.items.map(item => {\n          item.seen = true;\n          return item;\n        })\n      });\n    }).catch((error) => {\n      this.setState({\n        isLoading: false,\n        errorMsg: Utils.getErrorMsg(error, true) // true: show login tip if 403\n      });\n    });\n  }\n\n  clearAll = () => {\n    seafileAPI.deleteNotifications().then((res) => {\n      this.setState({\n        items: []\n      });\n    }).catch((error) => {\n      this.setState({\n        isLoading: false,\n        errorMsg: Utils.getErrorMsg(error, true) // true: show login tip if 403\n      });\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"h-100 d-flex flex-column\">\n          <div className=\"top-header d-flex justify-content-between\">\n            <a href={siteRoot}>\n              <img src={mediaUrl + logoPath} height={logoHeight} width={logoWidth} title={siteTitle} alt=\"logo\" />\n            </a>\n            <CommonToolbar onSearchedClick={this.onSearchedClick} />\n          </div>\n          <div className=\"flex-auto container-fluid pt-4 pb-6 o-auto\">\n            <div className=\"row\">\n              <div className=\"col-md-10 offset-md-1\">\n                <div className=\"d-flex justify-content-between align-items-center flex-wrap op-bar\">\n                  <h2 className=\"h4 m-0 my-1\">{gettext('Notifications')}</h2>\n                  <div>\n                    <button className=\"btn btn-secondary op-bar-btn\" onClick={this.markAllRead}>{gettext('Mark all read')}</button>\n                    <button className=\"btn btn-secondary op-bar-btn ml-2\" onClick={this.clearAll}>{gettext('Clear')}</button>\n                  </div>\n                </div>\n                <Content\n                  isLoading={this.state.isLoading}\n                  errorMsg={this.state.errorMsg}\n                  items={this.state.items}\n                  currentPage={this.state.currentPage}\n                  hasNextPage={this.state.hasNextPage}\n                  curPerPage={this.state.perPage}\n                  resetPerPage={this.resetPerPage}\n                  getListByPage={this.getItems}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nclass Content extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  getPreviousPage = () => {\n    this.props.getListByPage(this.props.currentPage - 1);\n  }\n\n  getNextPage = () => {\n    this.props.getListByPage(this.props.currentPage + 1);\n  }\n\n  render() {\n    const {\n      isLoading, errorMsg, items,\n      curPerPage, currentPage, hasNextPage\n    } = this.props;\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    if (errorMsg) {\n      return <p className=\"error mt-6 text-center\">{errorMsg}</p>;\n    }\n\n    const isDesktop = Utils.isDesktop();\n    const theadData = isDesktop ? [\n      {width: '7%', text: ''},\n      {width: '73%', text: gettext('Message')},\n      {width: '20%', text: gettext('Time')}\n    ] : [\n      {width: '15%', text: ''},\n      {width: '52%', text: gettext('Message')},\n      {width: '33%', text: gettext('Time')}\n    ];\n\n    return (\n      <React.Fragment>\n        <table className=\"table-hover\">\n          <thead>\n            <tr>\n              {theadData.map((item, index) => {\n                return <th key={index} width={item.width}>{item.text}</th>;\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {items.map((item, index) => {\n              return (<NoticeItem key={index} noticeItem={item} tr={true} />);\n            })}\n          </tbody>\n        </table>\n        {items.length > 0 &&\n        <Paginator\n          gotoPreviousPage={this.getPreviousPage}\n          gotoNextPage={this.getNextPage}\n          currentPage={currentPage}\n          hasNextPage={hasNextPage}\n          curPerPage={curPerPage}\n          resetPerPage={this.props.resetPerPage}\n        />\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nReactDom.render(<UserNotifications />, document.getElementById('wrapper'));\n"],"names":["UserNotifications","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","getItems","page","perPage","state","seafileAPI","listNotifications","then","res","setState","isLoading","items","data","notification_list","currentPage","hasNextPage","Utils","count","catch","error","errorMsg","getErrorMsg","resetPerPage","onSearchedClick","selectedItem","is_dir","url","siteRoot","repo_id","repo_name","path","navigate","repalce","encodePath","window","open","location","href","markAllRead","updateNotifications","map","item","seen","clearAll","deleteNotifications","_createClass","key","value","_this2","urlParams","URL","searchParams","_this$state","this","parseInt","get","_jsx","React","children","_jsxs","className","src","mediaUrl","logoPath","height","logoHeight","width","logoWidth","title","siteTitle","alt","CommonToolbar","gettext","onClick","Content","curPerPage","getListByPage","_React$Component2","_super2","_this3","getPreviousPage","getNextPage","_this$props","Loading","theadData","isDesktop","text","index","NoticeItem","noticeItem","tr","length","Paginator","gotoPreviousPage","gotoNextPage","ReactDom","document","getElementById"],"sourceRoot":""}