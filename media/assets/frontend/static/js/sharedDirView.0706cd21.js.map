{"version":3,"file":"static/js/sharedDirView.0706cd21.js","mappings":"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","sources":["components/dialog/copy-move-dirent-progress-dialog.js","components/dialog/image-dialog.js","components/dialog/zip-download-dialog.js","components/dialog/list-taggedfiles-dialog.js","models/draft.js","components/dialog/list-repo-drafts-dialog.js","components/dialog/readme-dialog.js","components/repo-info-bar.js","components/shared-link-file-uploader/upload-list-item.js","components/shared-link-file-uploader/forbid-upload-list-item.js","components/shared-link-file-uploader/upload-progress-dialog.js","components/shared-link-file-uploader/file-uploader.js","components/dialog/save-shared-dir-dialog.js","shared-dir-view.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\n\nconst propTypes = {\n  type: PropTypes.oneOf(['move', 'copy']).isRequired,\n  asyncOperatedFilesLength: PropTypes.number.isRequired,\n  asyncOperationProgress: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  toggleDialog: PropTypes.func.isRequired,\n};\n\nclass CopyMoveDirentProgressDialog extends React.Component {\n\n  render() {\n\n    let { type , asyncOperationProgress, asyncOperatedFilesLength } = this.props;\n    let title = type === 'move' ? gettext('Move {num} items') : gettext('Copy {num} items');\n    title = title.replace('{num}', asyncOperatedFilesLength);\n    let progressStyle = {\n      width: asyncOperationProgress + '%',\n      lineHeight: '40px',\n      textAlign: 'left',\n    };\n    return (\n      <Modal isOpen={true}>\n        <ModalHeader toggle={this.props.toggleDialog}>{title}</ModalHeader>\n        <ModalBody style={{minHeight: '80px'}}>\n          <div className=\"progress\" style={{height: '40px'}}>\n            <div\n              className=\"progress-bar pl-2\"\n              role=\"progressbar\"\n              style={progressStyle}\n              aria-valuenow={asyncOperationProgress}\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n            >\n              {asyncOperationProgress + '%'}\n            </div>\n          </div>\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\nCopyMoveDirentProgressDialog.propTypes = propTypes;\n\nexport default CopyMoveDirentProgressDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext } from '../../utils/constants';\nimport Lightbox from '@seafile/react-image-lightbox';\nimport '@seafile/react-image-lightbox/style.css';\n\nconst propTypes = {\n  imageItems: PropTypes.array.isRequired,\n  imageIndex: PropTypes.number.isRequired,\n  closeImagePopup: PropTypes.func.isRequired,\n  moveToPrevImage: PropTypes.func.isRequired,\n  moveToNextImage: PropTypes.func.isRequired\n};\n\nclass ImageDialog extends React.Component {\n\n  render() {\n    const imageItems = this.props.imageItems;\n    const imageIndex = this.props.imageIndex;\n    const imageItemsLength = imageItems.length;\n    const name = imageItems[imageIndex].name;\n    const imageTitle = `${name} (${imageIndex + 1}/${imageItemsLength})`;\n\n    return (\n      <Lightbox\n        imageTitle={imageTitle}\n        mainSrc={imageItems[imageIndex].src}\n        nextSrc={imageItems[(imageIndex + 1) % imageItemsLength].src}\n        prevSrc={imageItems[(imageIndex + imageItemsLength - 1) % imageItemsLength].src}\n        onCloseRequest={this.props.closeImagePopup}\n        onMovePrevRequest={this.props.moveToPrevImage}\n        onMoveNextRequest={this.props.moveToNextImage}\n        imagePadding={70}\n        imageLoadErrorMessage={gettext('The image could not be loaded.')}\n        prevLabel={gettext('Previous (Left arrow key)')}\n        nextLabel={gettext('Next (Right arrow key)')}\n        closeLabel={gettext('Close (Esc)')}\n        zoomInLabel={gettext('Zoom in')}\n        zoomOutLabel={gettext('Zoom out')}\n      />\n    );\n  }\n}\n\nImageDialog.propTypes = propTypes;\n\nexport default ImageDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { gettext, fileServerRoot } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport Loading from '../loading';\n\nconst propTypes = {\n  data: PropTypes.object,\n  token: PropTypes.string,\n  path: PropTypes.string.isRequired,\n  repoID: PropTypes.string,\n  target: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array\n  ]),\n  toggleDialog: PropTypes.func.isRequired\n};\n\nlet interval;\n\nclass ZipDownloadDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      errorMsg: '',\n      zipProgress: null\n    };\n  }\n\n  componentDidMount() {\n    const { token, path, repoID, target } = this.props;\n    let getZipTask;\n    if (token) {\n      getZipTask = target.length ?\n        seafileAPI.getShareLinkDirentsZipTask(token, path, target) :\n        seafileAPI.getShareLinkZipTask(token, path);\n    } else {\n      getZipTask = seafileAPI.zipDownload(repoID, path, target);\n    }\n    getZipTask.then((res) => {\n      const zipToken = res.data['zip_token'];\n      this.setState({\n        isLoading: false,\n        errorMsg: '',\n        zipToken: zipToken\n      });\n      this.queryZipProgress();\n      interval = setInterval(this.queryZipProgress, 1000);\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      this.setState({\n        isLoading: false,\n        errorMsg: errorMsg\n      });\n    });\n  }\n\n  queryZipProgress = () => {\n    const zipToken = this.state.zipToken;\n    seafileAPI.queryZipProgress(zipToken).then((res) => {\n      const data = res.data;\n      if (data.failed == 1) {\n        clearInterval(interval);\n        this.setState({\n          isLoading: false,\n          errorMsg: data.failed_reason\n        });\n      } else {\n        this.setState({\n          zipProgress: data.total == 0 ? '100%' : (data.zipped/data.total*100).toFixed(2) + '%'\n        });\n        if (data['total'] == data['zipped']) {\n          clearInterval(interval);\n          this.props.toggleDialog();\n          location.href = `${fileServerRoot}zip/${zipToken}`;\n        }\n      }\n    }).catch((error) => {\n      clearInterval(interval);\n      let errorMsg = Utils.getErrorMsg(error);\n      this.setState({\n        isLoading: false,\n        errorMsg: errorMsg\n      });\n    });\n  };\n\n  cancelZipTask = () => {\n    const zipToken = this.state.zipToken;\n    seafileAPI.cancelZipTask(zipToken).then((res) => {\n    // do nothing\n    }).catch((error) => {\n    // do nothing\n    });\n  };\n\n  toggleDialog = () => {\n    const zipProgress = this.state.zipProgress;\n    if (zipProgress && zipProgress != '100%') {\n      clearInterval(interval);\n      this.cancelZipTask();\n    }\n    this.props.toggleDialog();\n  };\n\n  render() {\n    return (\n      <Modal isOpen={true} toggle={this.toggleDialog}>\n        <ModalHeader toggle={this.toggleDialog}>{gettext('Download')}</ModalHeader>\n        <ModalBody>\n          <Content data={this.state} />\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\nclass Content extends React.Component {\n\n  render() {\n    const {isLoading, errorMsg, zipProgress} = this.props.data;\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    if (errorMsg) {\n      return <p className=\"error mt-4 text-center\">{errorMsg}</p>;\n    }\n\n    return <p className=\"mt-4 text-center\">{`${gettext('Packaging...')} ${zipProgress}`}</p>;\n  }\n}\n\nContent.propTypes = {\n  data: PropTypes.object,\n};\n\nZipDownloadDialog.propTypes = propTypes;\n\nexport default ZipDownloadDialog;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport moment from 'moment';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\n\nconst propTypes = {\n  repoID: PropTypes.string.isRequired,\n  currentTag: PropTypes.object.isRequired,\n  toggleCancel: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  updateUsedRepoTags: PropTypes.func,\n  onFileTagChanged: PropTypes.func,\n  shareLinkToken: PropTypes.string,\n  enableFileDownload: PropTypes.bool\n};\n\nclass ListTaggedFilesDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      taggedFileList: [],\n    };\n  }\n\n  onFileTagChanged = (TaggedFile) => {\n    const path = TaggedFile.parent_path;\n    const dirent = {name: TaggedFile.filename};\n    let direntPath = path === '/' ? path + TaggedFile.filename : path + '/' + TaggedFile.filename;\n    this.props.onFileTagChanged(dirent, direntPath);\n  };\n\n  onDeleteTaggedFile = (taggedFile) => {\n    let repoID = this.props.repoID;\n    let fileTagID = taggedFile.file_tag_id;\n    seafileAPI.deleteFileTag(repoID, fileTagID).then(res => {\n      this.getTaggedFiles();\n      this.props.updateUsedRepoTags();\n      if ((this.props.onFileTagChanged) && !taggedFile.file_deleted) this.onFileTagChanged(taggedFile);\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  };\n\n  componentDidMount() {\n    this.getTaggedFiles();\n  }\n\n  getTaggedFiles = () => {\n    let { repoID, currentTag, shareLinkToken } = this.props;\n    let request = shareLinkToken ?\n      seafileAPI.getShareLinkTaggedFiles(shareLinkToken, currentTag.id) :\n      seafileAPI.listTaggedFiles(repoID, currentTag.id);\n    request.then(res => {\n      let taggedFileList = [];\n      res.data.tagged_files !== undefined &&\n      res.data.tagged_files.forEach(file => {\n        let taggedFile = file;\n        taggedFileList.push(taggedFile);\n      });\n      this.setState({\n        taggedFileList: taggedFileList,\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  };\n\n  render() {\n    let taggedFileList = this.state.taggedFileList;\n    return (\n      <Modal isOpen={true} style={{maxWidth: '678px'}}>\n        <ModalHeader toggle={this.props.onClose}>{gettext('Tagged Files')}</ModalHeader>\n        <ModalBody className=\"dialog-list-container\">\n          <table>\n            <thead>\n              <tr>\n                <th width='50%' className=\"ellipsis\">{gettext('Name')}</th>\n                <th width='20%'>{gettext('Size')}</th>\n                <th width='22%'>{gettext('Last Update')}</th>\n                <th width='8%'></th>\n              </tr>\n            </thead>\n            <tbody>\n              {taggedFileList.map((taggedFile, index) => {\n                return (\n                  <TaggedFile\n                    key={index}\n                    repoID={this.props.repoID}\n                    taggedFile={taggedFile}\n                    onDeleteTaggedFile={this.onDeleteTaggedFile}\n                    shareLinkToken={this.props.shareLinkToken}\n                    enableFileDownload={this.props.enableFileDownload}\n                  />\n                );\n              })}\n            </tbody>\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.props.toggleCancel}>{gettext('Close')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nListTaggedFilesDialog.propTypes = propTypes;\n\nexport default ListTaggedFilesDialog;\n\nconst TaggedFilePropTypes = {\n  repoID: PropTypes.string.isRequired,\n  taggedFile: PropTypes.object,\n  onDeleteTaggedFile: PropTypes.func.isRequired,\n  shareLinkToken: PropTypes.string,\n  enableFileDownload: PropTypes.bool\n};\n\nclass TaggedFile extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = ({\n      active: false,\n    });\n  }\n\n  onMouseEnter = () => {\n    this.setState({\n      active: true\n    });\n  };\n\n  onMouseLeave = () => {\n    this.setState({\n      active: false\n    });\n  };\n\n  deleteFile = (e) => {\n    e.preventDefault();\n    this.props.onDeleteTaggedFile(this.props.taggedFile);\n  };\n\n  render() {\n    const { taggedFile, shareLinkToken, enableFileDownload } = this.props;\n\n    let path = taggedFile.parent_path ? Utils.joinPath(taggedFile.parent_path, taggedFile.filename) : '';\n    let href = shareLinkToken ?\n      siteRoot + 'd/' + shareLinkToken + '/files/?p=' + Utils.encodePath(path) :\n      siteRoot + 'lib/' + this.props.repoID + '/file' + Utils.encodePath(path);\n\n    return (\n      <tr onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave} onFocus={this.onMouseEnter}>\n        {taggedFile.file_deleted ?\n          <Fragment>\n            <td colSpan='3' className=\"name\">{taggedFile.filename}{' '}\n              <span style={{color:'red'}}>{gettext('deleted')}</span>\n            </td>\n          </Fragment>\n          :\n          <Fragment>\n            <td><a href={href} target='_blank' className=\"d-inline-block w-100 ellipsis\" title={taggedFile.filename} rel=\"noreferrer\">{taggedFile.filename}</a></td>\n            <td>{Utils.bytesToSize(taggedFile.size)}</td>\n            <td>{moment.unix(taggedFile.mtime).fromNow()}</td>\n          </Fragment>\n        }\n        <td>\n          {!shareLinkToken &&\n            <a href=\"#\" role=\"button\" aria-label={gettext('Delete')} title={gettext('Delete')} className={`action-icon sf2-icon-x3${this.state.active ? '' : ' invisible'}`} onClick={this.deleteFile}></a>\n          }\n          {(shareLinkToken && enableFileDownload) &&\n            <a className={`action-icon sf2-icon-download${this.state.active ? '' : ' invisible'}`} href={`${href}&dl=1`} title={gettext('Download')} aria-label={gettext('Download')}></a>\n          }\n        </td>\n      </tr>\n    );\n  }\n}\n\nTaggedFile.propTypes = TaggedFilePropTypes;\n","import moment from 'moment';\n\nclass Draft {\n\n  constructor(item) {\n    this.created = item.created_at;\n    this.createdStr = moment((new Date(item.created_at)).getTime()).format('YYYY-MM-DD HH:mm');\n    this.id = item.id;\n    this.ownerNickname = item.owner_nickname;\n    this.originRepoID = item.origin_repo_id;\n    this.draftFilePath = item.draft_file_path;\n  }\n}\n\nexport default Draft;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport moment from 'moment';\nimport editorUtilities from '../../utils/editor-utilities';\nimport toaster from '../../components/toast';\nimport { Utils } from '../../utils/utils';\nimport Draft from '../../models/draft';\n\nconst propTypes = {\n  repoID: PropTypes.string.isRequired,\n  toggle: PropTypes.func.isRequired,\n};\n\nclass ListRepoDraftsDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      drafts: [],\n    };\n  }\n\n  componentDidMount() {\n    seafileAPI.listRepoDrafts(this.props.repoID).then(res => {\n      let drafts = res.data.drafts.map(item => {\n        let draft = new Draft(item);\n        return draft;\n      });\n      this.setState({\n        drafts: drafts\n      });\n    });\n  }\n\n  onDeleteDraftItem = (draft) => {\n    editorUtilities.deleteDraft(draft.id).then(() => {\n      let drafts = this.state.drafts.filter(item => {\n        return item.id !== draft.id;\n      });\n      this.setState({drafts: drafts});\n      let msg = gettext('Successfully deleted draft %(draft)s.');\n      msg = msg.replace('%(draft)s', draft.draftFilePath);\n      toaster.success(msg);\n    }).catch(() => {\n      let msg = gettext('Failed to delete draft %(draft)s.');\n      msg = msg.replace('%(draft)s', draft.draftFilePath);\n      toaster.danger(msg);\n    });\n  };\n\n  toggle = () => {\n    this.props.toggle();\n  };\n\n  render() {\n    return (\n      <Modal isOpen={true}>\n        <ModalHeader toggle={this.toggle}>{gettext('Drafts')}</ModalHeader>\n        <ModalBody className=\"dialog-list-container\">\n          <table>\n            <thead>\n              <tr>\n                <th width='50%' className=\"ellipsis\">{gettext('Name')}</th>\n                <th width='20%'>{gettext('Owner')}</th>\n                <th width='20%'>{gettext('Last Update')}</th>\n                <th width='10%'></th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.drafts.map((item, index) => {\n                return (\n                  <DraftItem\n                    key={index}\n                    draftItem={item}\n                    onDeleteDraftItem={this.onDeleteDraftItem}\n                  />\n                );\n              })}\n            </tbody>\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.toggle}>{gettext('Close')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nListRepoDraftsDialog.propTypes = propTypes;\n\nexport default ListRepoDraftsDialog;\n\nconst DraftItemPropTypes = {\n  draftItem: PropTypes.object,\n  onDeleteDraftItem: PropTypes.func.isRequired,\n};\n\nclass DraftItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = ({\n      active: false,\n    });\n  }\n\n  onMouseEnter = () => {\n    this.setState({\n      active: true\n    });\n  };\n\n  onMouseLeave = () => {\n    this.setState({\n      active: false\n    });\n  };\n\n  render() {\n    const draftItem = this.props.draftItem;\n    let href = siteRoot + 'drafts/' + draftItem.id + '/';\n    let className = this.state.active ? 'action-icon sf2-icon-x3' : 'action-icon vh sf2-icon-x3';\n    return (\n      <tr onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave}>\n        <td className=\"name\">\n          <a href={href} target='_blank' rel=\"noreferrer\">{Utils.getFileName(draftItem.draftFilePath)}</a>\n        </td>\n        <td>{draftItem.ownerNickname}</td>\n        <td>{moment(draftItem.createdStr).fromNow()}</td>\n        <td>\n          <i className={className} onClick={this.props.onDeleteDraftItem.bind(this, draftItem)}></i>\n        </td>\n      </tr>\n    );\n  }\n}\n\nDraftItem.propTypes = DraftItemPropTypes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { MarkdownViewer } from '@seafile/seafile-editor';\nimport Loading from '../../components/loading';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { gettext, mediaUrl } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\n\nconst propTypes = {\n  repoID: PropTypes.string.isRequired,\n  filePath: PropTypes.string.isRequired,\n  fileName: PropTypes.string.isRequired,\n  href: PropTypes.string,\n  toggleCancel: PropTypes.func.isRequired,\n};\n\nclass ReadmeDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      readmeContent: null,\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    seafileAPI.getFileDownloadLink(this.props.repoID, this.props.filePath).then(res => {\n      seafileAPI.getFileContent(res.data).then(res => {\n        this.setState({\n          readmeContent: res.data,\n          isLoading: false,\n        });\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  render() {\n    return (\n      <Modal isOpen={true} toggle={this.props.toggleCancel} className=\"readme-dialog\" size=\"lg\">\n        <ModalHeader>{this.props.fileName}\n          <a className=\"readme-dialog-edit\" href={this.props.href} target='_blank' rel=\"noreferrer\"><i className=\"fa fa-pencil-alt\"></i></a>\n        </ModalHeader>\n        <ModalBody>\n          {this.state.isLoading ?\n            <Loading />:\n            <MarkdownViewer\n              markdownContent={this.state.readmeContent}\n              showTOC={false}\n              scriptSource={mediaUrl + 'js/mathjax/tex-svg.js'}\n            />\n          }\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.props.toggleCancel}>{gettext('Close')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nReadmeDialog.propTypes = propTypes;\n\nexport default ReadmeDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ModalPortal from './modal-portal';\nimport ListTaggedFilesDialog from './dialog/list-taggedfiles-dialog';\nimport ListRepoDraftsDialog from './dialog/list-repo-drafts-dialog';\nimport ReadmeDialog from './dialog/readme-dialog';\nimport { siteRoot, gettext } from '../utils/constants';\nimport { Utils } from '../utils/utils';\n\nimport '../css/repo-info-bar.css';\n\nconst propTypes = {\n  repoID: PropTypes.string.isRequired,\n  currentPath: PropTypes.string.isRequired,\n  usedRepoTags: PropTypes.array.isRequired,\n  readmeMarkdown: PropTypes.object,\n  draftCounts: PropTypes.number,\n  updateUsedRepoTags: PropTypes.func,\n  onFileTagChanged: PropTypes.func,\n  className: PropTypes.string,\n  shareLinkToken: PropTypes.string,\n  enableFileDownload: PropTypes.bool\n};\n\nclass RepoInfoBar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTag: null,\n      isListTaggedFileShow: false,\n      showRepoDrafts: false,\n      showReadmeDialog: false,\n    };\n  }\n\n  onListTaggedFiles = (currentTag) => {\n    this.setState({\n      currentTag: currentTag,\n      isListTaggedFileShow: !this.state.isListTaggedFileShow,\n    });\n  };\n\n  onCloseDialog = () => {\n    this.setState({\n      isListTaggedFileShow: false\n    });\n  };\n\n  toggleDrafts = () => {\n    this.setState({\n      showRepoDrafts: !this.state.showRepoDrafts\n    });\n  };\n\n  toggleReadme = () => {\n    this.setState({\n      showReadmeDialog: !this.state.showReadmeDialog\n    });\n  };\n\n  render() {\n    let { repoID, currentPath, usedRepoTags, readmeMarkdown, draftCounts, className } = this.props;\n\n    // to be compatible with the existing code\n    if (readmeMarkdown === undefined) {\n      readmeMarkdown = null;\n    }\n    if (draftCounts === undefined) {\n      draftCounts = 0;\n    }\n\n    let href = readmeMarkdown !== null ? siteRoot + 'lib/' + repoID + '/file' + Utils.joinPath(currentPath, readmeMarkdown.name) +  '?mode=edit' : '';\n    let filePath = readmeMarkdown !== null ? currentPath + readmeMarkdown.name : '';\n    return (\n      <div className={`repo-info-bar ${className ? className : ''}`}>\n        {usedRepoTags.length > 0 && (\n          <ul className=\"used-tag-list\">\n            {usedRepoTags.map((usedRepoTag) => {\n              return (\n                <li key={usedRepoTag.id} className=\"used-tag-item\">\n                  <span className=\"used-tag\" style={{backgroundColor:usedRepoTag.color}}></span>\n                  <span className=\"used-tag-name\" title={usedRepoTag.name}>{usedRepoTag.name}</span>\n                  <button type=\"button\" className=\"used-tag-files border-0 bg-transparent\" onClick={this.onListTaggedFiles.bind(this, usedRepoTag)}>\n                    {usedRepoTag.fileCount > 1 ? usedRepoTag.fileCount + ' files' : usedRepoTag.fileCount + ' file'}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n        <div className={(usedRepoTags.length > 0 && readmeMarkdown) ? 'file-info-list mt-1' : 'file-info-list'}>\n          {(readmeMarkdown !== null && parseInt(readmeMarkdown.size) > 1) &&\n            <span className=\"file-info\" onClick={this.toggleReadme}>\n              <span className=\"info-icon sf2-icon-readme\"></span>\n              <span className=\"used-tag-name\">{readmeMarkdown.name}</span>\n            </span>\n          }\n          {(readmeMarkdown !== null && parseInt(readmeMarkdown.size) < 2) &&\n            <span className=\"file-info\">\n              <span className=\"info-icon sf2-icon-readme\"></span>\n              <a className=\"used-tag-name\" href={href} target='_blank' rel=\"noreferrer\">{readmeMarkdown.name}</a>\n            </span>\n          }\n          {draftCounts > 0 &&\n            <span className=\"file-info\">\n              <span className=\"info-icon sf2-icon-drafts\"></span>\n              <span className=\"used-tag-name\">{gettext('draft')}</span>\n              <button type=\"button\" className=\"used-tag-files border-0 bg-transparent\" onClick={this.toggleDrafts}>\n                {draftCounts > 1 ? draftCounts + ' files' : draftCounts + ' file'}\n              </button>\n            </span>\n          }\n        </div>\n        {this.state.isListTaggedFileShow && (\n          <ModalPortal>\n            <ListTaggedFilesDialog\n              repoID={repoID}\n              currentTag={this.state.currentTag}\n              onClose={this.onCloseDialog}\n              toggleCancel={this.onListTaggedFiles}\n              updateUsedRepoTags={this.props.updateUsedRepoTags}\n              onFileTagChanged={this.props.onFileTagChanged}\n              shareLinkToken={this.props.shareLinkToken}\n              enableFileDownload={this.props.enableFileDownload}\n            />\n          </ModalPortal>\n        )}\n\n        {this.state.showRepoDrafts && (\n          <ModalPortal>\n            <ListRepoDraftsDialog\n              toggle={this.toggleDrafts}\n              repoID={this.props.repoID}\n            />\n          </ModalPortal>\n        )}\n\n        {this.state.showReadmeDialog && (\n          <ModalPortal>\n            <ReadmeDialog\n              toggleCancel={this.toggleReadme}\n              repoID={repoID}\n              filePath={filePath}\n              href={href}\n              fileName={readmeMarkdown.name}\n            />\n          </ModalPortal>\n        )}\n      </div>\n    );\n  }\n}\n\nRepoInfoBar.propTypes = propTypes;\n\nexport default RepoInfoBar;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\n\nconst propTypes = {\n  resumableFile: PropTypes.object.isRequired,\n  onUploadCancel: PropTypes.func.isRequired,\n  onUploadRetry: PropTypes.func.isRequired,\n};\n\nconst UPLOAD_UPLOADING = 'uploading';\nconst UPLOAD_ERROR = 'error';\nconst UPLOAD_ISSAVING = 'isSaving';\nconst UPLOAD_UPLOADED = 'uploaded';\n\nclass UploadListItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      uploadState: UPLOAD_UPLOADING\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let { resumableFile } = nextProps;\n    let uploadState = UPLOAD_UPLOADING;\n\n    if (resumableFile.error) {\n      uploadState = UPLOAD_ERROR;\n    } else {\n      if (resumableFile.remainingTime === 0 && !resumableFile.isSaved) {\n        uploadState = UPLOAD_ISSAVING;\n      }\n\n      if (resumableFile.isSaved) {\n        uploadState = UPLOAD_UPLOADED;\n      }\n    }\n\n    this.setState({uploadState: uploadState});\n  }\n\n  onUploadCancel = (e) => {\n    e.preventDefault();\n    this.props.onUploadCancel(this.props.resumableFile);\n  };\n\n  onUploadRetry = (e) => {\n    e.preventDefault();\n    this.props.onUploadRetry(this.props.resumableFile);\n  };\n\n  formatFileSize = (size) => {\n    if (typeof size !== 'number') {\n      return '';\n    }\n    if (size >= 1000 * 1000 * 1000) {\n      return (size / (1000 * 1000 * 1000)).toFixed(1) + ' G';\n    }\n    if (size >= 1000 * 1000) {\n      return (size / (1000 * 1000)).toFixed(1) + ' M';\n    }\n    if (size >= 1000) {\n      return (size / 1000).toFixed(1) + ' K';\n    }\n    return size.toFixed(1) + ' B';\n  };\n\n  render() {\n    let { resumableFile } = this.props;\n    let progress = Math.round(resumableFile.progress() * 100);\n    let error = resumableFile.error;\n\n    const fileName = resumableFile.newFileName;\n    const size = this.formatFileSize(resumableFile.size);\n\n    return (\n      <tr className=\"file-upload-item\">\n        <td className=\"upload-name\">\n          <div className=\"ellipsis\" title={fileName}>{fileName}</div>\n        </td>\n        <td className=\"ellipsis\">\n          <span className=\"file-size\" title={size}>{size}</span>\n        </td>\n        <td className=\"upload-progress ellipsis\">\n          {(this.state.uploadState === UPLOAD_UPLOADING || this.state.uploadState === UPLOAD_ISSAVING) &&\n            <Fragment>\n              {resumableFile.size >= (100 * 1000 * 1000) &&\n                <Fragment>\n                  {resumableFile.isUploading() && (\n                    <div className=\"progress-container\">\n                      <div className=\"progress\">\n                        <div className=\"progress-bar\" role=\"progressbar\" style={{width: `${progress}%`}} aria-valuenow={progress} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                      </div>\n                      {(resumableFile.remainingTime === -1) && <div className=\"progress-text\">{gettext('Preparing to upload...')}</div>}\n                      {(resumableFile.remainingTime > 0) && <div className=\"progress-text\">{gettext('Remaining')}{' '}{Utils.formatTime(resumableFile.remainingTime)}</div>}\n                      {(resumableFile.remainingTime === 0) && <div className=\"progress-text\">{gettext('Indexing...')}</div>}\n                    </div>\n                  )}\n                  {!resumableFile.isUploading() && (\n                    <div className=\"progress-container d-flex align-items-center\">\n                      <div className=\"progress\">\n                        <div className=\"progress-bar\" role=\"progressbar\" style={{width: `${progress}%`}} aria-valuenow={progress} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                      </div>\n                    </div>\n                  )}\n                </Fragment>\n              }\n              {(resumableFile.size < (100 * 1000 * 1000)) &&\n                <div className=\"progress-container d-flex align-items-center\">\n                  <div className=\"progress\">\n                    <div className=\"progress-bar\" role=\"progressbar\" style={{width: `${progress}%`}} aria-valuenow={progress} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                  </div>\n                </div>\n              }\n            </Fragment>\n          }\n          {this.state.uploadState === UPLOAD_ERROR && (\n            <div className=\"message err-message ml-0\" dangerouslySetInnerHTML={{__html: error}}></div>\n          )}\n        </td>\n        <td className=\"upload-operation ellipsis\">\n          <Fragment>\n            {this.state.uploadState === UPLOAD_UPLOADING && (\n              <a href=\"#\" onClick={this.onUploadCancel}>{gettext('Cancel')}</a>\n            )}\n            {this.state.uploadState === UPLOAD_ERROR && (\n              <a href=\"#\" onClick={this.onUploadRetry}>{gettext('Retry')}</a>\n            )}\n            {this.state.uploadState === UPLOAD_ISSAVING && (\n              <span className=\"saving\">{gettext('Saving...')}</span>\n            )}\n            {this.state.uploadState === UPLOAD_UPLOADED && (\n              <span className=\"uploaded\">{gettext('Uploaded')}</span>\n            )}\n          </Fragment>\n        </td>\n      </tr>\n    );\n  }\n}\n\nUploadListItem.propTypes = propTypes;\n\nexport default UploadListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext, maxUploadFileSize } from '../../utils/constants';\n\nconst propTypes = {\n  file: PropTypes.object,\n};\n\nclass ForbidUploadListItem extends React.Component {\n\n  render() {\n    let { file } = this.props;\n    let msg = gettext('Please upload files less than {placeholder}M').replace('{placeholder}', maxUploadFileSize);\n    return (\n      <tr className=\"file-upload-item\">\n        <td className=\"upload-name\">\n          <div className=\"ellipsis\" title={file.name}>{file.name}</div>\n        </td>\n\n        <td colSpan={3} className=\"error\">{msg}</td>\n      </tr>\n    );\n  }\n}\n\nForbidUploadListItem.propTypes = propTypes;\n\nexport default ForbidUploadListItem;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\nimport UploadListItem from './upload-list-item';\nimport ForbidUploadListItem from './forbid-upload-list-item';\n\nconst propTypes = {\n  uploadBitrate: PropTypes.number.isRequired,\n  totalProgress: PropTypes.number.isRequired,\n  retryFileList: PropTypes.array.isRequired,\n  uploadFileList: PropTypes.array.isRequired,\n  forbidUploadFileList: PropTypes.array.isRequired,\n  onCloseUploadDialog: PropTypes.func.isRequired,\n  onCancelAllUploading: PropTypes.func.isRequired,\n  onUploadCancel: PropTypes.func.isRequired,\n  onUploadRetry: PropTypes.func.isRequired,\n  onUploadRetryAll: PropTypes.func.isRequired,\n  allFilesUploaded: PropTypes.bool.isRequired,\n};\n\nclass UploadProgressDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMinimized: false\n    };\n  }\n\n  onCancelAllUploading = () => {\n    this.props.onCancelAllUploading();\n  };\n\n  onMinimizeUpload = (e) => {\n    e.nativeEvent.stopImmediatePropagation();\n    this.setState({isMinimized: !this.state.isMinimized});\n  };\n\n  onCloseUpload = (e) => {\n    e.nativeEvent.stopImmediatePropagation();\n    this.props.onCloseUploadDialog();\n  };\n\n  render() {\n\n    let uploadBitrate = Utils.formatBitRate(this.props.uploadBitrate);\n    let uploadedMessage = gettext('File Upload');\n    let uploadingMessage = gettext('File Uploading...') + ' ' + this.props.totalProgress + '% (' + uploadBitrate + ')';\n\n    let uploadingOptions = (<span className=\"sf2-icon-minus\" onClick={this.onMinimizeUpload}></span>);\n\n    let uploadedOptions = (\n      <Fragment>\n        <span className=\"sf2-icon-minus\" onClick={this.onMinimizeUpload}></span>\n        <span className=\"sf2-icon-x1\" onClick={this.onCloseUpload}></span>\n      </Fragment>\n    );\n\n    let { totalProgress, allFilesUploaded, retryFileList } = this.props;\n\n    return (\n      <div className=\"uploader-list-view mw-100\" style={{height: this.state.isMinimized ? '2.25rem' : '20rem'}}>\n        <div className=\"uploader-list-header\">\n          <div className=\"title\">\n            {totalProgress === 100 ? uploadedMessage : uploadingMessage}\n          </div>\n          <div className=\"uploader-options\">\n            {totalProgress === 100 ||  allFilesUploaded ? uploadedOptions : uploadingOptions}\n          </div>\n        </div>\n        <div className=\"uploader-list-content\">\n          <div className=\"text-right mt-2\">\n            {retryFileList.length > 0 ?\n              <span className=\"cursor-pointer\" onClick={this.props.onUploadRetryAll}>{gettext('Retry All')}</span>\n              :\n              <span className=\"cursor-pointer disabled-link\">{gettext('Retry All')}</span>\n            }\n            {!allFilesUploaded ?\n              <span className=\"cursor-pointer ml-3\" onClick={this.onCancelAllUploading}>{gettext('Cancel All')}</span>\n              :\n              <span className=\"cursor-pointer ml-3 disabled-link\" >{gettext('Cancel All')}</span>\n            }\n          </div>\n          <table className=\"table-thead-hidden\">\n            <thead>\n              <tr>\n                <th width=\"30%\">{gettext('name')}</th>\n                <th width=\"20%\">{gettext('size')}</th>\n                <th width=\"30%\">{gettext('progress')}</th>\n                <th width=\"20%\">{gettext('state')}</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                this.props.forbidUploadFileList.map((file, index) => {\n                  return (<ForbidUploadListItem key={index} file={file} />);\n                })\n              }\n              {\n                this.props.uploadFileList.map((resumableFile, index) => {\n                  return (\n                    <UploadListItem\n                      key={index}\n                      resumableFile={resumableFile}\n                      onUploadCancel={this.props.onUploadCancel}\n                      onUploadRetry={this.props.onUploadRetry}\n                    />\n                  );\n                })\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nUploadProgressDialog.propTypes = propTypes;\n\nexport default UploadProgressDialog;\n","// the parent folder of this file is copied from components/file-uploader\n// this file is modified according to the requirements of 'file upload' in 'shared dir link'\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Resumablejs from '@seafile/resumablejs';\nimport MD5 from 'MD5';\nimport { resumableUploadFileBlockSize, maxUploadFileSize, maxNumberOfFilesForFileupload } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport { gettext } from '../../utils/constants';\nimport UploadProgressDialog from './upload-progress-dialog';\nimport toaster from '../toast';\nimport '../../css/file-uploader.css';\n\nconst propTypes = {\n  token: PropTypes.string.isRequired,\n  repoID: PropTypes.string.isRequired,\n  //direntList: PropTypes.array.isRequired,\n  filetypes: PropTypes.array,\n  chunkSize: PropTypes.number,\n  withCredentials: PropTypes.bool,\n  testMethod: PropTypes.string,\n  testChunks: PropTypes.number,\n  simultaneousUploads: PropTypes.number,\n  fileParameterName: PropTypes.string,\n  minFileSizeErrorCallback: PropTypes.func,\n  fileTypeErrorCallback: PropTypes.func,\n  dragAndDrop: PropTypes.bool.isRequired,\n  path: PropTypes.string.isRequired,\n  relativePath: PropTypes.string.isRequired,\n  onFileUploadSuccess: PropTypes.func.isRequired\n};\n\nclass FileUploader extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      retryFileList: [],\n      uploadFileList: [],\n      forbidUploadFileList: [],\n      totalProgress: 0,\n      isUploadProgressDialogShow: false,\n      isUploadRemindDialogShow: false,\n      currentResumableFile: null,\n      uploadBitrate: 0,\n      allFilesUploaded: false,\n    };\n\n    this.uploadInput = React.createRef();\n\n    this.notifiedFolders = [];\n\n    this.timestamp = null;\n    this.loaded = 0;\n    this.bitrateInterval = 500; // Interval in milliseconds to calculate the bitrate\n    window.onbeforeunload = this.onbeforeunload;\n    this.isUploadLinkLoaded = false;\n  }\n\n  componentDidMount() {\n    this.resumable = new Resumablejs({\n      target: '',\n      query: this.setQuery || {},\n      fileType: this.props.filetypes,\n      maxFiles: maxNumberOfFilesForFileupload || undefined,\n      maxFileSize: maxUploadFileSize * 1000 * 1000 || undefined,\n      testMethod: this.props.testMethod || 'post',\n      testChunks: this.props.testChunks || false,\n      headers: this.setHeaders || {},\n      withCredentials: this.props.withCredentials || false,\n      chunkSize: parseInt(resumableUploadFileBlockSize) * 1024 * 1024 || 1 * 1024 * 1024,\n      simultaneousUploads: this.props.simultaneousUploads || 1,\n      fileParameterName: this.props.fileParameterName,\n      generateUniqueIdentifier: this.generateUniqueIdentifier,\n      forceChunkSize: true,\n      maxChunkRetries: 3,\n      minFileSize: 0,\n    });\n\n    this.resumable.assignBrowse(this.uploadInput.current, true);\n\n    //Enable or Disable DragAnd Drop\n    if (this.props.dragAndDrop === true) {\n      this.resumable.enableDropOnDocument();\n    }\n\n    this.bindCallbackHandler();\n    this.bindEventHandler();\n  }\n\n  componentWillUnmount = () => {\n    window.onbeforeunload = null;\n    if (this.props.dragAndDrop === true) {\n      this.resumable.disableDropOnDocument();\n    }\n  };\n\n  onbeforeunload = () => {\n    if (window.uploader &&\n        window.uploader.isUploadProgressDialogShow &&\n        window.uploader.totalProgress !== 100) {\n      return '';\n    }\n  };\n\n  bindCallbackHandler = () => {\n    let { minFileSizeErrorCallback, fileTypeErrorCallback } = this.props;\n\n    if (this.maxFilesErrorCallback) {\n      this.resumable.opts.maxFilesErrorCallback = this.maxFilesErrorCallback;\n    }\n\n    if (minFileSizeErrorCallback) {\n      this.resumable.opts.minFileSizeErrorCallback = this.props.minFileSizeErrorCallback;\n    }\n\n    if (this.maxFileSizeErrorCallback) {\n      this.resumable.opts.maxFileSizeErrorCallback = this.maxFileSizeErrorCallback;\n    }\n\n    if (fileTypeErrorCallback) {\n      this.resumable.opts.fileTypeErrorCallback = this.props.fileTypeErrorCallback;\n    }\n\n  };\n\n  bindEventHandler = () => {\n    this.resumable.on('chunkingComplete', this.onChunkingComplete.bind(this));\n    this.resumable.on('fileAdded', this.onFileAdded.bind(this));\n    this.resumable.on('filesAddedComplete', this.filesAddedComplete.bind(this));\n    this.resumable.on('fileProgress', this.onFileProgress.bind(this));\n    this.resumable.on('fileSuccess', this.onFileUploadSuccess.bind(this));\n    this.resumable.on('progress', this.onProgress.bind(this));\n    this.resumable.on('complete', this.onComplete.bind(this));\n    this.resumable.on('pause', this.onPause.bind(this));\n    this.resumable.on('fileRetry', this.onFileRetry.bind(this));\n    this.resumable.on('fileError', this.onFileError.bind(this));\n    this.resumable.on('error', this.onError.bind(this));\n    this.resumable.on('beforeCancel', this.onBeforeCancel.bind(this));\n    this.resumable.on('cancel', this.onCancel.bind(this));\n    this.resumable.on('dragstart', this.onDragStart.bind(this));\n  };\n\n  maxFilesErrorCallback = (files, errorCount) => {\n    let maxFiles = maxNumberOfFilesForFileupload;\n    let message = gettext('Please upload no more than {maxFiles} files at a time.');\n    message = message.replace('{maxFiles}', maxFiles);\n    toaster.danger(message);\n  };\n\n  maxFileSizeErrorCallback = (file) => {\n    let { forbidUploadFileList } = this.state;\n    forbidUploadFileList.push(file);\n    this.setState({forbidUploadFileList: forbidUploadFileList});\n  };\n\n  onChunkingComplete = (resumableFile) => {\n\n    let allFilesUploaded = this.state.allFilesUploaded;\n    if (allFilesUploaded === true) {\n      this.setState({allFilesUploaded: false});\n    }\n\n    //get parent_dir relative_path\n    let path = this.props.path === '/' ? '/' : this.props.path + '/';\n    let fileName = resumableFile.fileName;\n    let relativePath = resumableFile.relativePath;\n    let isFile = fileName === relativePath;\n\n    //update formdata\n    resumableFile.formData = {};\n    if (isFile) { // upload file\n      resumableFile.formData  = {\n        parent_dir: path,\n      };\n    } else { // upload folder\n      let relative_path = relativePath.slice(0, relativePath.lastIndexOf('/') + 1);\n      resumableFile.formData  = {\n        parent_dir: path,\n        relative_path: relative_path\n      };\n    }\n  };\n\n  onFileAdded = (resumableFile, files) => {\n    let isFile = resumableFile.fileName === resumableFile.relativePath;\n    // uploading is file and only upload one file\n    if (isFile && files.length === 1) {\n      let hasRepetition = false;\n      /*\n      let direntList = this.props.direntList;\n      for (let i = 0; i < direntList.length; i++) {\n        if (direntList[i].type === 'file' && direntList[i].name === resumableFile.fileName) {\n          hasRepetition = true;\n          break;\n        }\n      }\n      */\n      if (hasRepetition) {\n        this.setState({\n          isUploadRemindDialogShow: true,\n          currentResumableFile: resumableFile,\n        });\n      } else {\n        this.setUploadFileList(this.resumable.files);\n        let { token, relativePath } = this.props;\n        seafileAPI.sharedLinkGetFileUploadUrl(token, relativePath).then(res => {\n          this.resumable.opts.target = res.data.upload_link + '?ret-json=1';\n          this.resumableUpload(resumableFile);\n        }).catch(error => {\n          let errMessage = Utils.getErrorMsg(error);\n          toaster.danger(errMessage);\n        });\n      }\n    } else {\n      this.setUploadFileList(this.resumable.files);\n      if (!this.isUploadLinkLoaded) {\n        this.isUploadLinkLoaded = true;\n        let { token, relativePath } = this.props;\n        seafileAPI.sharedLinkGetFileUploadUrl(token, relativePath).then(res => {\n          this.resumable.opts.target = res.data.upload_link + '?ret-json=1';\n          this.resumable.upload();\n        }).catch(error => {\n          let errMessage = Utils.getErrorMsg(error);\n          toaster.danger(errMessage);\n        });\n      }\n    }\n  };\n\n  resumableUpload = (resumableFile) => {\n    let { repoID, path } = this.props;\n    seafileAPI.getFileUploadedBytes(repoID, path, resumableFile.fileName).then(res => {\n      let uploadedBytes = res.data.uploadedBytes;\n      let blockSize = parseInt(resumableUploadFileBlockSize) * 1024 * 1024 || 1024 * 1024;\n      let offset = Math.floor(uploadedBytes / blockSize);\n      resumableFile.markChunksCompleted(offset);\n      this.resumable.upload();\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  };\n\n  filesAddedComplete = (resumable, files) => {\n    let { forbidUploadFileList } = this.state;\n    if (forbidUploadFileList.length > 0 && files.length === 0) {\n      this.setState({\n        isUploadProgressDialogShow: true,\n        totalProgress: 100\n      });\n    }\n  };\n\n  setUploadFileList = () => {\n    let uploadFileList = this.resumable.files;\n    this.setState({\n      uploadFileList: uploadFileList,\n      isUploadProgressDialogShow: true,\n    });\n    Utils.registerGlobalVariable('uploader', 'isUploadProgressDialogShow', true);\n  };\n\n  onFileProgress = (resumableFile) => {\n    let uploadBitrate = this.getBitrate();\n    let uploadFileList = this.state.uploadFileList.map(item => {\n      if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n        if (uploadBitrate) {\n          let lastSize = (item.size - (item.size * item.progress())) * 8;\n          let time = Math.floor(lastSize / uploadBitrate);\n          item.remainingTime = time;\n        }\n      }\n      return item;\n    });\n\n    this.setState({\n      uploadBitrate: uploadBitrate,\n      uploadFileList: uploadFileList\n    });\n  };\n\n  getBitrate = () => {\n    let loaded = 0;\n    let uploadBitrate = 0;\n    let now = new Date().getTime();\n\n    this.resumable.files.forEach(file => {\n      loaded += file.progress() * file.size;\n    });\n\n    if (this.timestamp) {\n      let timeDiff = (now - this.timestamp);\n      if (timeDiff < this.bitrateInterval) {\n        return this.state.uploadBitrate;\n      }\n\n      // 1. Cancel will produce loaded greater than this.loaded\n      // 2. reset can make this.loaded to be 0\n      if (loaded < this.loaded || this.loaded === 0) {\n        this.loaded = loaded; //\n      }\n\n      uploadBitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\n    }\n\n    this.timestamp = now;\n    this.loaded = loaded;\n\n    return uploadBitrate;\n  };\n\n  onProgress = () => {\n    let progress = Math.round(this.resumable.progress() * 100);\n    this.setState({totalProgress: progress});\n    Utils.registerGlobalVariable('uploader', 'totalProgress', progress);\n  };\n\n  onFileUploadSuccess = (resumableFile, message) => {\n    let formData = resumableFile.formData;\n    let currentTime = new Date().getTime()/1000;\n    message = formData.replace ? message : JSON.parse(message)[0];\n    if (formData.relative_path) { // upload folder\n      // 'upload folder' is not supported\n      /*\n      let relative_path = formData.relative_path;\n      let dir_name = relative_path.slice(0, relative_path.indexOf('/'));\n      let dirent = {\n        id: message.id,\n        name: dir_name,\n        type: 'dir',\n        mtime: currentTime,\n      };\n\n      // update folders cache\n      let isExist = this.notifiedFolders.some(item => {return item.name === dirent.name;});\n      if (!isExist) {\n        this.notifiedFolders.push(dirent);\n        this.props.onFileUploadSuccess(dirent);\n      }\n\n      // update uploadFileList\n      let uploadFileList = this.state.uploadFileList.map(item => {\n        if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n          item.newFileName = relative_path + message.name;\n          item.isSaved = true;\n        }\n        return item;\n      });\n      this.setState({uploadFileList: uploadFileList});\n\n      return;\n      */\n    }\n\n    // replacing file is not allowed in shared link with 'can_upload' permission\n    /*\n    if (formData.replace) { // upload file -- replace exist file\n      let fileName = resumableFile.fileName;\n      let dirent = {\n        id: message,\n        name: fileName,\n        type: 'file',\n        mtime: currentTime\n      };\n      this.props.onFileUploadSuccess(dirent); // this contance: just one file\n\n      let uploadFileList = this.state.uploadFileList.map(item => {\n        if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n          item.newFileName = fileName;\n          item.isSaved = true;\n        }\n        return item;\n      });\n      this.setState({uploadFileList: uploadFileList});\n\n      return;\n    }\n    */\n\n    // upload file -- add files\n    let dirent = {\n      id: message.id,\n      type: 'file',\n      name: message.name,\n      size: message.size,\n      mtime: currentTime,\n    };\n    this.props.onFileUploadSuccess(dirent); // this contance:  no repetition file\n\n    let uploadFileList = this.state.uploadFileList.map(item => {\n      if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n        item.newFileName = message.name;\n        item.isSaved = true;\n      }\n      return item;\n    });\n    this.setState({uploadFileList: uploadFileList});\n  };\n\n  onFileError = (resumableFile, message) => {\n    let error = '';\n    if (!message) {\n      error = gettext('Network error');\n    } else {\n      // eg: '{\"error\": \"Internal error\" \\n }'\n      let errorMessage = message.replace(/\\n/g, '');\n      errorMessage  = JSON.parse(errorMessage);\n      error = errorMessage.error;\n      if (error === 'File locked by others.') {\n        error = gettext('File is locked by others.');\n      }\n      if (error === 'Internal error.') {\n        error = gettext('Internal Server Error');\n      }\n    }\n\n    let uploadFileList = this.state.uploadFileList.map(item => {\n      if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n        this.state.retryFileList.push(item);\n        item.error = error;\n      }\n      return item;\n    });\n\n    this.loaded = 0;  // reset loaded data;\n    this.setState({\n      retryFileList: this.state.retryFileList,\n      uploadFileList: uploadFileList\n    });\n\n  };\n\n  onComplete = () => {\n    this.notifiedFolders = [];\n    // reset upload link loaded\n    this.isUploadLinkLoaded = false;\n    this.setState({allFilesUploaded: true});\n  };\n\n  onPause = () => {\n\n  };\n\n  onError = (message) => {\n    // reset upload link loaded\n    this.isUploadLinkLoaded = false;\n    // After the error, the user can switch windows\n    Utils.registerGlobalVariable('uploader', 'totalProgress', 100);\n  };\n\n  onFileRetry = () => {\n    // todo, cancel upload file, uploded again;\n  };\n\n  onBeforeCancel = () => {\n    // todo, giving a pop message ?\n  };\n\n  onCancel = () => {\n\n  };\n\n  setHeaders = (resumableFile, resumable) => {\n    let offset = resumable.offset;\n    let chunkSize = resumable.getOpt('chunkSize');\n    let fileSize = resumableFile.size === 0 ? 1 : resumableFile.size;\n    let startByte = offset !== 0 ? offset * chunkSize : 0;\n    let endByte = Math.min(fileSize, (offset + 1) * chunkSize) - 1;\n\n    if (fileSize - resumable.endByte < chunkSize && !resumable.getOpt('forceChunkSize')) {\n      endByte = fileSize;\n    }\n\n    let headers = {\n      'Accept': 'application/json; text/javascript, */*; q=0.01',\n      'Content-Disposition': 'attachment; filename=\"' + encodeURI(resumableFile.fileName) + '\"',\n      'Content-Range': 'bytes ' + startByte + '-' + endByte + '/' + fileSize,\n    };\n\n    return headers;\n  };\n\n  setQuery = (resumableFile) => {\n    let formData = resumableFile.formData;\n    return formData;\n  };\n\n  generateUniqueIdentifier = (file) => {\n    let relativePath = file.webkitRelativePath||file.relativePath||file.fileName||file.name;\n    return MD5(relativePath + new Date()) + relativePath;\n  };\n\n  onClick = (e) => {\n    e.nativeEvent.stopImmediatePropagation();\n    e.stopPropagation();\n  };\n\n  onFileUpload = () => {\n    this.uploadInput.current.removeAttribute('webkitdirectory');\n\n    this.uploadInput.current.click();\n  };\n\n  onFolderUpload = () => {\n    this.uploadInput.current.setAttribute('webkitdirectory', 'webkitdirectory');\n    this.uploadInput.current.click();\n  };\n\n  onDragStart = () => {\n    this.uploadInput.current.setAttribute('webkitdirectory', 'webkitdirectory');\n  };\n\n  onCloseUploadDialog = () => {\n    this.loaded = 0;\n    this.resumable.files = [];\n    // reset upload link loaded\n    this.isUploadLinkLoaded = false;\n    this.setState({isUploadProgressDialogShow: false, uploadFileList: [], forbidUploadFileList: []});\n    Utils.registerGlobalVariable('uploader', 'isUploadProgressDialogShow', false);\n  };\n\n  onUploadCancel = (uploadingItem) => {\n\n    let uploadFileList = this.state.uploadFileList.filter(item => {\n      if (item.uniqueIdentifier === uploadingItem.uniqueIdentifier) {\n        item.cancel(); // execute cancel function will delete the file at the same time\n        return false;\n      }\n      return true;\n    });\n\n    if (!this.resumable.isUploading()) {\n      this.setState({\n        totalProgress: '100',\n        allFilesUploaded: true,\n      });\n      this.loaded = 0;\n    }\n\n    this.setState({uploadFileList: uploadFileList});\n  };\n\n  onCancelAllUploading = () => {\n    let uploadFileList = this.state.uploadFileList.filter(item => {\n      if (Math.round(item.progress() !== 1)) {\n        item.cancel();\n        return false;\n      }\n      return true;\n    });\n\n    this.loaded = 0;\n\n    this.setState({\n      allFilesUploaded: true,\n      totalProgress: '100',\n      uploadFileList: uploadFileList\n    });\n    // reset upload link loaded\n    this.isUploadLinkLoaded = false;\n  };\n\n  onUploadRetry = (resumableFile) => {\n\n    let { token, relativePath } = this.props;\n    seafileAPI.sharedLinkGetFileUploadUrl(token, relativePath).then(res => {\n      this.resumable.opts.target = res.data.upload_link + '?ret-json=1';\n\n      let retryFileList = this.state.retryFileList.filter(item => {\n        return item.uniqueIdentifier !== resumableFile.uniqueIdentifier;\n      });\n      let uploadFileList = this.state.uploadFileList.map(item => {\n        if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n          item.error = null;\n          this.retryUploadFile(item);\n        }\n        return item;\n      });\n\n      this.setState({\n        retryFileList: retryFileList,\n        uploadFileList: uploadFileList\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  };\n\n  onUploadRetryAll = () => {\n\n    let { token, relativePath } = this.props;\n    seafileAPI.sharedLinkGetFileUploadUrl(token, relativePath).then(res => {\n      this.resumable.opts.target = res.data.upload_link + '?ret-json=1';\n      this.state.retryFileList.forEach(item => {\n        item.error = false;\n        this.retryUploadFile(item);\n      });\n\n      let uploadFileList = this.state.uploadFileList.slice(0);\n      this.setState({\n        retryFileList: [],\n        uploadFileList: uploadFileList\n      });\n\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  };\n\n  retryUploadFile = (resumableFile) => {\n    let { repoID, path } = this.props;\n    let fileName = resumableFile.fileName;\n    let isFile = resumableFile.fileName === resumableFile.relativePath;\n    if (!isFile) {\n      let relative_path = resumableFile.formData.relative_path;\n      let prefix = path === '/' ? (path + relative_path) : (path + '/' + relative_path);\n      fileName = prefix + fileName;\n    }\n\n    resumableFile.bootstrap();\n    var firedRetry = false;\n    resumableFile.resumableObj.on('chunkingComplete', () => {\n      if(!firedRetry) {\n        seafileAPI.getFileUploadedBytes(repoID, path, fileName).then(res => {\n          let uploadedBytes = res.data.uploadedBytes;\n          let blockSize = parseInt(resumableUploadFileBlockSize) * 1024 * 1024 || 1024 * 1024;\n          let offset = Math.floor(uploadedBytes / blockSize);\n          resumableFile.markChunksCompleted(offset);\n\n          resumableFile.resumableObj.upload();\n\n        }).catch(error => {\n          let errMessage = Utils.getErrorMsg(error);\n          toaster.danger(errMessage);\n        });\n      }\n      firedRetry = true;\n    });\n  };\n\n  uploadFile = () => {\n    let resumableFile = this.resumable.files[this.resumable.files.length - 1];\n\n    let { token, relativePath } = this.props;\n    seafileAPI.sharedLinkGetFileUploadUrl(token, relativePath).then(res => {\n      this.resumable.opts.target = res.data.upload_link + '?ret-json=1';\n      this.setState({\n        isUploadRemindDialogShow: false,\n        isUploadProgressDialogShow: true,\n        uploadFileList: [...this.state.uploadFileList, resumableFile]\n      }, () => {\n        this.resumable.upload();\n      });\n      Utils.registerGlobalVariable('uploader', 'isUploadProgressDialogShow', true);\n\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  };\n\n  cancelFileUpload = () => {\n    this.resumable.files.pop(); //delete latest file；\n    this.setState({isUploadRemindDialogShow: false});\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"file-uploader-container\">\n          <div className=\"file-uploader\">\n            <input className=\"upload-input\" type=\"file\" ref={this.uploadInput} onClick={this.onClick}/>\n          </div>\n        </div>\n        {this.state.isUploadProgressDialogShow &&\n          <UploadProgressDialog\n            retryFileList={this.state.retryFileList}\n            uploadFileList={this.state.uploadFileList}\n            forbidUploadFileList={this.state.forbidUploadFileList}\n            totalProgress={this.state.totalProgress}\n            uploadBitrate={this.state.uploadBitrate}\n            allFilesUploaded={this.state.allFilesUploaded}\n            onCloseUploadDialog={this.onCloseUploadDialog}\n            onCancelAllUploading={this.onCancelAllUploading}\n            onUploadCancel={this.onUploadCancel}\n            onUploadRetry={this.onUploadRetry}\n            onUploadRetryAll={this.onUploadRetryAll}\n          />\n        }\n      </Fragment>\n    );\n  }\n}\n\nFileUploader.propTypes = propTypes;\n\nexport default FileUploader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Alert } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\nimport FileChooser from '../file-chooser/file-chooser';\n\nconst propTypes = {\n  sharedToken: PropTypes.string.isRequired,\n  parentDir: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n  toggleCancel: PropTypes.func.isRequired,\n  handleSaveSharedDir: PropTypes.func.isRequired,\n};\n\nclass SaveSharedDirDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      repo: null,\n      selectedPath: '',\n      errMessage: '',\n    };\n  }\n\n  onSaveSharedFile = () => {\n    this.props.handleSaveSharedDir(this.state.repo.repo_id, this.state.selectedPath);\n  };\n\n  onDirentItemClick = (repo, selectedPath, dirent) => {\n    if (dirent.type === 'dir') {\n      this.setState({\n        repo: repo,\n        selectedPath: selectedPath,\n      });\n    }\n    else {\n      this.setState({\n        repo: null,\n        selectedPath: '',\n      });\n    }\n  };\n\n  onRepoItemClick = (repo) => {\n    this.setState({\n      repo: repo,\n      selectedPath: '/',\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={true} className=\"sf-save-file\">\n        <ModalHeader toggle={this.props.toggleCancel}>{gettext('Save to:')}</ModalHeader>\n        <ModalBody>\n          <FileChooser\n            isShowFile={false}\n            onDirentItemClick={this.onDirentItemClick}\n            onRepoItemClick={this.onRepoItemClick}\n            mode=\"only_all_repos\"\n          />\n          {this.state.errMessage && <Alert color=\"danger\">{this.state.errMessage}</Alert>}\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.props.toggleCancel}>{gettext('Cancel')}</Button>\n          { this.state.selectedPath ?\n            <Button color=\"primary\" onClick={this.onSaveSharedFile}>{gettext('Submit')}</Button>\n            :\n            <Button color=\"primary\" disabled>{gettext('Submit')}</Button>\n          }\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nSaveSharedDirDialog.propTypes = propTypes;\n\nexport default SaveSharedDirDialog;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport MD5 from 'MD5';\nimport ReactDom from 'react-dom';\nimport { Button, Dropdown, DropdownToggle, DropdownItem, UncontrolledTooltip } from 'reactstrap';\nimport moment from 'moment';\nimport Account from './components/common/account';\nimport { useGoFileserver, fileServerRoot, gettext, siteRoot, mediaUrl, logoPath, logoWidth, logoHeight, siteTitle, thumbnailSizeForOriginal } from './utils/constants';\nimport { Utils } from './utils/utils';\nimport { seafileAPI } from './utils/seafile-api';\nimport Loading from './components/loading';\nimport toaster from './components/toast';\nimport ModalPortal from './components/modal-portal';\nimport ZipDownloadDialog from './components/dialog/zip-download-dialog';\nimport ImageDialog from './components/dialog/image-dialog';\nimport FileUploader from './components/shared-link-file-uploader/file-uploader';\nimport SaveSharedDirDialog from './components/dialog/save-shared-dir-dialog';\nimport CopyMoveDirentProgressDialog from './components/dialog/copy-move-dirent-progress-dialog';\nimport RepoInfoBar from './components/repo-info-bar';\nimport RepoTag from './models/repo-tag';\n\nimport './css/shared-dir-view.css';\nimport './css/grid-view.css';\n\nmoment.locale(window.app.config.lang);\n\nlet loginUser = window.app.pageOptions.name;\nlet {\n  token, dirName, dirPath, sharedBy,\n  repoID, relativePath,\n  mode, thumbnailSize, zipped,\n  trafficOverLimit, canDownload,\n  noQuota, canUpload, enableVideoThumbnail\n} = window.shared.pageOptions;\n\nconst showDownloadIcon = !trafficOverLimit && canDownload;\n\nclass SharedDirView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      errorMsg: '',\n      items: [],\n\n      isAllItemsSelected: false,\n      selectedItems: [],\n\n      sortBy: 'name', // 'name' or 'time' or 'size'\n      sortOrder: 'asc', // 'asc' or 'desc'\n\n      isZipDialogOpen: false,\n      zipFolderPath: '',\n\n      usedRepoTags: [],\n      isRepoInfoBarShow: false,\n\n      isSaveSharedDirDialogShow: false,\n      itemsForSave: [],\n\n      asyncCopyMoveTaskId: '',\n      asyncOperationProgress: 0,\n      asyncOperatedFilesLength: 0,\n      isCopyMoveProgressDialogShow: false,\n\n      isImagePopupOpen: false,\n      imageItems: [],\n      imageIndex: 0\n    };\n  }\n\n  componentDidMount() {\n    if (trafficOverLimit) {\n      toaster.danger(gettext('File download is disabled: the share link traffic of owner is used up.'), {\n        duration: 3\n      });\n    }\n\n    seafileAPI.listSharedDir(token, relativePath, thumbnailSize).then((res) => {\n      const items = res.data['dirent_list'].map(item => {\n        item.isSelected = false;\n        return item;\n      });\n      this.setState({\n        isLoading: false,\n        errorMsg: '',\n        items: Utils.sortDirentsInSharedDir(items, this.state.sortBy, this.state.sortOrder)\n      });\n      this.getThumbnails();\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      this.setState({\n        isLoading: false,\n        errorMsg: errorMsg\n      });\n    });\n\n    this.getShareLinkRepoTags();\n  }\n\n  sortItems = (sortBy, sortOrder) => {\n    this.setState({\n      sortBy: sortBy,\n      sortOrder: sortOrder,\n      items: Utils.sortDirentsInSharedDir(this.state.items, sortBy, sortOrder)\n    });\n  };\n\n  getThumbnails = () => {\n    let items = this.state.items.filter((item) => {\n      return !item.is_dir &&\n        (Utils.imageCheck(item.file_name) ||\n        (enableVideoThumbnail && Utils.videoCheck(item.file_name))) &&\n        !item.encoded_thumbnail_src;\n    });\n    if (items.length == 0) {\n      return ;\n    }\n\n    const len = items.length;\n    const _this = this;\n    let getThumbnail = function(i) {\n      const curItem = items[i];\n      seafileAPI.getShareLinkThumbnail(token, curItem.file_path, thumbnailSize).then((res) => {\n        curItem.encoded_thumbnail_src = res.data.encoded_thumbnail_src;\n      }).catch((error) => {\n        // do nothing\n      }).then(() => {\n        if (i < len - 1) {\n          getThumbnail(++i);\n        } else {\n          // when done, `setState()`\n          _this.setState({\n            items: _this.state.items\n          });\n        }\n      });\n    };\n    getThumbnail(0);\n  };\n\n  renderPath = () => {\n    return (\n      <React.Fragment>\n        {zipped.map((item, index) => {\n          if (index != zipped.length - 1) {\n            return (\n              <React.Fragment key={index}>\n                <a href={`?p=${encodeURIComponent(item.path)}&mode=${mode}`} className=\"mx-1 ellipsis\" title={item.name}>{item.name}</a>\n                <span> / </span>\n              </React.Fragment>\n            );\n          }\n          return null;\n        })\n        }\n        <span className=\"ml-1 ellipsis\" title={zipped[zipped.length - 1].name}>{zipped[zipped.length - 1].name}</span>\n      </React.Fragment>\n    );\n  };\n\n  zipDownloadFolder = (folderPath) => {\n    if (!useGoFileserver) {\n      this.setState({\n        isZipDialogOpen: true,\n        zipFolderPath: folderPath\n      });\n    }\n    else {\n      seafileAPI.getShareLinkZipTask(token, folderPath).then((res) => {\n        const zipToken = res.data['zip_token'];\n        location.href = `${fileServerRoot}zip/${zipToken}`;\n      }).catch((error) => {\n        let errorMsg = Utils.getErrorMsg(error);\n        this.setState({\n          isLoading: false,\n          errorMsg: errorMsg\n        });\n      });\n    }\n  };\n\n  zipDownloadSelectedItems = () => {\n    if (!useGoFileserver) {\n      this.setState({\n        isZipDialogOpen: true,\n        zipFolderPath: relativePath,\n        selectedItems: this.state.items.filter(item => item.isSelected)\n          .map(item => item.file_name || item.folder_name)\n      });\n    }\n    else {\n      let target = this.state.items.filter(item => item.isSelected).map(item => item.file_name || item.folder_name);\n      seafileAPI.getShareLinkDirentsZipTask(token, relativePath, target).then((res) => {\n        const zipToken = res.data['zip_token'];\n        location.href = `${fileServerRoot}zip/${zipToken}`;\n      }).catch((error) => {\n        let errorMsg = Utils.getErrorMsg(error);\n        this.setState({\n          isLoading: false,\n          errorMsg: errorMsg\n        });\n      });\n    }\n  };\n\n  async getAsyncCopyMoveProgress() {\n    let { asyncCopyMoveTaskId } = this.state;\n    try {\n      let res = await seafileAPI.queryAsyncOperationProgress(asyncCopyMoveTaskId);\n      let data = res.data;\n      if (data.failed) {\n        let message = gettext('Failed to copy files to another library.');\n        toaster.danger(message);\n        this.setState({\n          asyncOperationProgress: 0,\n          isCopyMoveProgressDialogShow: false,\n        });\n        return;\n      }\n\n      if (data.successful) {\n        this.setState({\n          asyncOperationProgress: 0,\n          isCopyMoveProgressDialogShow: false,\n        });\n        let message = gettext('Successfully copied files to another library.');\n        toaster.success(message);\n        return;\n      }\n      // init state: total is 0\n      let asyncOperationProgress = !data.total ? 0 : parseInt((data.done/data.total * 100).toFixed(2));\n\n      this.getAsyncCopyMoveProgress();\n      this.setState({asyncOperationProgress: asyncOperationProgress});\n    } catch (error) {\n      this.setState({\n        asyncOperationProgress: 0,\n        isCopyMoveProgressDialogShow: false,\n      });\n    }\n  }\n\n  saveSelectedItems = () => {\n    this.setState({\n      isSaveSharedDirDialogShow: true,\n      itemsForSave: this.state.items.filter(item => item.isSelected)\n        .map(item => item.file_name || item.folder_name)\n    });\n  };\n\n  saveAllItems = () => {\n    this.setState({\n      isSaveSharedDirDialogShow: true,\n      itemsForSave: this.state.items\n        .map(item => item.file_name || item.folder_name)\n    });\n  };\n\n  toggleSaveSharedDirCancel = () => {\n    this.setState({\n      isSaveSharedDirDialogShow: false,\n      itemsForSave: []\n    });\n  };\n\n  handleSaveSharedDir = (destRepoID, dstPath) => {\n\n    const itemsForSave = this.state.itemsForSave;\n\n    seafileAPI.saveSharedDir(destRepoID, dstPath, token, relativePath, itemsForSave).then((res) => {\n      this.setState({\n        isSaveSharedDirDialogShow: false,\n        itemsForSave: [],\n        isCopyMoveProgressDialogShow: true,\n        asyncCopyMoveTaskId: res.data.task_id,\n        asyncOperatedFilesLength: itemsForSave.length,\n      }, () => {\n        this.getAsyncCopyMoveProgress();\n      });\n    }).catch((error) => {\n      let errMessage = Utils.getErrorMsg(error);\n      this.setState({errMessage: errMessage});\n    });\n  };\n\n  onProgressDialogToggle = () => {\n    let { asyncOperationProgress } = this.state;\n    if (asyncOperationProgress !== 100) {\n      let taskId = this.state.asyncCopyMoveTaskId;\n      seafileAPI.cancelCopyMoveOperation(taskId);\n    }\n\n    this.setState({\n      asyncOperationProgress: 0,\n      isCopyMoveProgressDialogShow: false,\n    });\n  };\n\n  closeZipDialog = () => {\n    this.setState({\n      isZipDialogOpen: false,\n      zipFolderPath: '',\n      selectedItems: []\n    });\n  };\n\n  // for image popup\n  prepareImageItem = (item) => {\n    const name = item.file_name;\n    const fileExt = name.substr(name.lastIndexOf('.') + 1).toLowerCase();\n    const isGIF = fileExt == 'gif';\n\n    let src;\n    const fileURL = `${siteRoot}d/${token}/files/?p=${encodeURIComponent(item.file_path)}`;\n    if (!isGIF) {\n      src = `${siteRoot}thumbnail/${token}/${thumbnailSizeForOriginal}${Utils.encodePath(item.file_path)}`;\n    } else {\n      src = `${fileURL}&raw=1`;\n    }\n\n    return {\n      'name': name,\n      'url': fileURL,\n      'src': src\n    };\n  };\n\n  showImagePopup = (curItem) => {\n    const items = this.state.items.filter((item) => {\n      return !item.is_dir && Utils.imageCheck(item.file_name);\n    });\n    const imageItems = items.map((item) => {\n      return this.prepareImageItem(item);\n    });\n\n    this.setState({\n      isImagePopupOpen: true,\n      imageItems: imageItems,\n      imageIndex: items.indexOf(curItem)\n    });\n  };\n\n  closeImagePopup = () => {\n    this.setState({\n      isImagePopupOpen: false\n    });\n  };\n\n  moveToPrevImage = () => {\n    const imageItemsLength = this.state.imageItems.length;\n    this.setState((prevState) => ({\n      imageIndex: (prevState.imageIndex + imageItemsLength - 1) % imageItemsLength\n    }));\n  };\n\n  moveToNextImage = () => {\n    const imageItemsLength = this.state.imageItems.length;\n    this.setState((prevState) => ({\n      imageIndex: (prevState.imageIndex + 1) % imageItemsLength\n    }));\n  };\n\n  toggleAllSelected = () => {\n    this.setState((prevState) => ({\n      isAllItemsSelected: !prevState.isAllItemsSelected,\n      items: this.state.items.map((item) => {\n        item.isSelected = !prevState.isAllItemsSelected;\n        return item;\n      })\n    }));\n  };\n\n  toggleItemSelected = (targetItem, isSelected) => {\n    this.setState({\n      items: this.state.items.map((item) => {\n        if (item === targetItem) {\n          item.isSelected = isSelected;\n        }\n        return item;\n      })\n    }, () => {\n      this.setState({\n        isAllItemsSelected: !this.state.items.some(item => !item.isSelected)\n      });\n    });\n  };\n\n  onUploadFile = (e) => {\n    e.nativeEvent.stopImmediatePropagation();\n    this.uploader.onFileUpload();\n  };\n\n  onFileUploadSuccess = (direntObject) => {\n    const { name, size } = direntObject;\n    const newItem = {\n      isSelected: false,\n      file_name: name,\n      file_path: Utils.joinPath(relativePath, name),\n      is_dir: false,\n      last_modified: moment().format(),\n      size: size\n    };\n    const folderItems = this.state.items.filter(item => { return item.is_dir; });\n    // put the new file as the first file\n    let items = Array.from(this.state.items);\n    items.splice(folderItems.length, 0, newItem);\n    this.setState({items: items});\n    seafileAPI.shareLinksUploadDone(token, Utils.joinPath(dirPath, name));\n  };\n\n  getShareLinkRepoTags = () => {\n    seafileAPI.getShareLinkRepoTags(token).then(res => {\n      let usedRepoTags = [];\n      res.data.repo_tags.forEach(item => {\n        let usedRepoTag = new RepoTag(item);\n        if (usedRepoTag.fileCount > 0) {\n          usedRepoTags.push(usedRepoTag);\n        }\n      });\n      this.setState({usedRepoTags: usedRepoTags});\n      if (usedRepoTags.length != 0 && relativePath == '/') {\n        this.setState({isRepoInfoBarShow: true});\n      }\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  };\n\n  render() {\n    const isDesktop = Utils.isDesktop();\n    const modeBaseClass = 'btn btn-secondary btn-icon sf-view-mode-btn';\n    return (\n      <React.Fragment>\n        <div className=\"h-100 d-flex flex-column\">\n          <div className=\"top-header d-flex justify-content-between\">\n            <a href={siteRoot}>\n              <img src={mediaUrl + logoPath} height={logoHeight} width={logoWidth} title={siteTitle} alt=\"logo\" />\n            </a>\n            {loginUser && <Account />}\n          </div>\n          <div className=\"o-auto\">\n            <div className=\"shared-dir-view-main\">\n              <h2 className=\"h3\">{dirName}</h2>\n              <p>{gettext('Shared by: ')}{sharedBy}</p>\n              <div className=\"d-flex justify-content-between align-items-center op-bar\">\n                <p className=\"m-0 mr-4 ellipsis d-flex align-items-center\"><span className=\"flex-none\">{gettext('Current path: ')}</span>{this.renderPath()}</p>\n                <div className=\"flex-none\">\n                  {isDesktop &&\n                  <div className=\"view-mode btn-group\">\n                    <a\n                      href={`?p=${encodeURIComponent(relativePath)}&mode=list`}\n                      className={`${modeBaseClass} sf2-icon-list-view ${mode == 'list' ? 'current-mode' : ''}`}\n                      title={gettext('List')}\n                      aria-label={gettext('List')}\n                    ></a>\n                    <a\n                      href={`?p=${encodeURIComponent(relativePath)}&mode=grid`}\n                      className={`${modeBaseClass} sf2-icon-grid-view ${mode == 'grid' ? 'current-mode' : ''}`}\n                      title={gettext('Grid')}\n                      aria-label={gettext('Grid')}\n                    ></a>\n                  </div>\n                  }\n                  {canUpload && (\n                    <Button disabled={noQuota}\n                      title={noQuota ? gettext('The owner of this library has run out of space.') : ''}\n                      onClick={this.onUploadFile} className=\"ml-2 shared-dir-op-btn shared-dir-upload-btn\"\n                    >{gettext('Upload')}</Button>\n                  )}\n                  {showDownloadIcon &&\n                  <Fragment>\n                    {this.state.items.some(item => item.isSelected) ?\n                      <Fragment>\n                        <Button color=\"success\" onClick={this.zipDownloadSelectedItems} className=\"ml-2 shared-dir-op-btn\">{gettext('ZIP Selected Items')}</Button>\n                        {(canDownload && loginUser && (loginUser !== sharedBy)) &&\n                        <Button color=\"success\" onClick={this.saveSelectedItems} className=\"ml-2 shared-dir-op-btn\">{gettext('Save Selected Items')}</Button>\n                        }\n                      </Fragment>\n                      :\n                      <Fragment>\n                        <Button color=\"success\" onClick={this.zipDownloadFolder.bind(this, relativePath)} className=\"ml-2 shared-dir-op-btn\">{gettext('ZIP')}</Button>\n                        {(canDownload && loginUser && (loginUser !== sharedBy)) &&\n                        <Button color=\"success\" onClick={this.saveAllItems} className=\"ml-2 shared-dir-op-btn\">{gettext('Save')}</Button>\n                        }\n                      </Fragment>\n                    }\n                  </Fragment>\n                  }\n                </div>\n              </div>\n              {!noQuota && canUpload && (\n                <FileUploader\n                  ref={uploader => this.uploader = uploader}\n                  dragAndDrop={false}\n                  token={token}\n                  path={dirPath === '/' ? dirPath : dirPath.replace(/\\/+$/, '')}\n                  relativePath={relativePath === '/' ? relativePath : relativePath.replace(/\\/+$/, '')}\n                  repoID={repoID}\n                  onFileUploadSuccess={this.onFileUploadSuccess}\n                />\n              )}\n\n              {this.state.isRepoInfoBarShow && (\n                <RepoInfoBar\n                  repoID={repoID}\n                  currentPath={'/'}\n                  usedRepoTags={this.state.usedRepoTags}\n                  shareLinkToken={token}\n                  enableFileDownload={showDownloadIcon}\n                  className=\"mx-0\"\n                />\n              )}\n\n              <Content\n                isDesktop={isDesktop}\n                isLoading={this.state.isLoading}\n                errorMsg={this.state.errorMsg}\n                items={this.state.items}\n                sortBy={this.state.sortBy}\n                sortOrder={this.state.sortOrder}\n                sortItems={this.sortItems}\n                isAllItemsSelected={this.state.isAllItemsSelected}\n                toggleAllSelected={this.toggleAllSelected}\n                toggleItemSelected={this.toggleItemSelected}\n                zipDownloadFolder={this.zipDownloadFolder}\n                showImagePopup={this.showImagePopup}\n              />\n            </div>\n          </div>\n        </div>\n        {this.state.isZipDialogOpen &&\n        <ModalPortal>\n          <ZipDownloadDialog\n            token={token}\n            path={this.state.zipFolderPath}\n            target={this.state.selectedItems}\n            toggleDialog={this.closeZipDialog}\n          />\n        </ModalPortal>\n        }\n        {this.state.isSaveSharedDirDialogShow &&\n          <SaveSharedDirDialog\n            sharedToken={token}\n            parentDir={relativePath}\n            items={this.state.itemsForSave}\n            toggleCancel={this.toggleSaveSharedDirCancel}\n            handleSaveSharedDir={this.handleSaveSharedDir}\n          />\n        }\n        {this.state.isCopyMoveProgressDialogShow && (\n          <CopyMoveDirentProgressDialog\n            type='copy'\n            asyncOperatedFilesLength={this.state.asyncOperatedFilesLength}\n            asyncOperationProgress={this.state.asyncOperationProgress}\n            toggleDialog={this.onProgressDialogToggle}\n          />\n        )}\n        {this.state.isImagePopupOpen &&\n        <ModalPortal>\n          <ImageDialog\n            imageItems={this.state.imageItems}\n            imageIndex={this.state.imageIndex}\n            closeImagePopup={this.closeImagePopup}\n            moveToPrevImage={this.moveToPrevImage}\n            moveToNextImage={this.moveToNextImage}\n          />\n        </ModalPortal>\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nclass Content extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  sortByName = (e) => {\n    e.preventDefault();\n    const sortBy = 'name';\n    const sortOrder = this.props.sortOrder == 'asc' ? 'desc' : 'asc';\n    this.props.sortItems(sortBy, sortOrder);\n  };\n\n  sortByTime = (e) => {\n    e.preventDefault();\n    const sortBy = 'time';\n    const sortOrder = this.props.sortOrder == 'asc' ? 'desc' : 'asc';\n    this.props.sortItems(sortBy, sortOrder);\n  };\n\n  sortBySize = (e) => {\n    e.preventDefault();\n    const sortBy = 'size';\n    const sortOrder = this.props.sortOrder == 'asc' ? 'desc' : 'asc';\n    this.props.sortItems(sortBy, sortOrder);\n  };\n\n  render() {\n    const {\n      isDesktop,\n      isLoading, errorMsg, items,\n      sortBy, sortOrder,\n      isAllItemsSelected\n    } = this.props;\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    if (errorMsg) {\n      return <p className=\"error mt-6 text-center\">{errorMsg}</p>;\n    }\n\n    const tbody = (\n      <tbody>\n        {items.map((item, index) => {\n          return <Item\n            key={index}\n            isDesktop={isDesktop}\n            item={item}\n            zipDownloadFolder={this.props.zipDownloadFolder}\n            showImagePopup={this.props.showImagePopup}\n            toggleItemSelected={this.props.toggleItemSelected}\n          />;\n        })}\n      </tbody>\n    );\n\n    if (!isDesktop) {\n      return (\n        <table className=\"table-hover table-thead-hidden\">\n          <thead>\n            <tr>\n              <th width=\"12%\"></th>\n              <th width=\"80%\"></th>\n              <th width=\"8%\"></th>\n            </tr>\n          </thead>\n          {tbody}\n        </table>\n      );\n    }\n\n    const sortIcon = <span className={`fas ${sortOrder == 'asc' ? 'fa-caret-up' : 'fa-caret-down'}`}></span>;\n    return mode == 'list' ? (\n      <table className=\"table-hover\">\n        <thead>\n          <tr>\n            {showDownloadIcon &&\n            <th width=\"3%\" className=\"text-center\">\n              <input type=\"checkbox\" checked={isAllItemsSelected} onChange={this.props.toggleAllSelected} />\n            </th>\n            }\n            <th width=\"5%\"></th>\n            <th width={showDownloadIcon ? '50%' : '53%'}><a className=\"d-block table-sort-op\" href=\"#\" onClick={this.sortByName}>{gettext('Name')} {sortBy == 'name' && sortIcon}</a></th>\n            <th width=\"8%\"></th>\n            <th width=\"14%\"><a className=\"d-block table-sort-op\" href=\"#\" onClick={this.sortBySize}>{gettext('Size')} {sortBy == 'size' && sortIcon}</a></th>\n            <th width=\"13%\"><a className=\"d-block table-sort-op\" href=\"#\" onClick={this.sortByTime}>{gettext('Last Update')} {sortBy == 'time' && sortIcon}</a></th>\n            <th width=\"7%\"></th>\n          </tr>\n        </thead>\n        {tbody}\n      </table>\n    ) : (\n      <ul className=\"grid-view\">\n        {items.map((item, index) => {\n          return <GridItem\n            key={index}\n            item={item}\n            zipDownloadFolder={this.props.zipDownloadFolder}\n            showImagePopup={this.props.showImagePopup}\n          />;\n        })}\n      </ul>\n    );\n  }\n}\n\nContent.propTypes = {\n  isDesktop: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  isAllItemsSelected: PropTypes.bool.isRequired,\n  errorMsg: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n  sortItems: PropTypes.func.isRequired,\n  sortBy: PropTypes.string.isRequired,\n  sortOrder: PropTypes.string.isRequired,\n  toggleAllSelected: PropTypes.func.isRequired,\n  toggleItemSelected: PropTypes.func.isRequired,\n  zipDownloadFolder: PropTypes.func.isRequired,\n  showImagePopup: PropTypes.func.isRequired,\n};\n\nclass Item extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isIconShown: false,\n      isOpMenuOpen: false\n    };\n  }\n\n  toggleOpMenu = () => {\n    this.setState({isOpMenuOpen: !this.state.isOpMenuOpen});\n  };\n\n  handleMouseOver = () => {\n    this.setState({isIconShown: true});\n  };\n\n  handleMouseOut = () => {\n    this.setState({isIconShown: false});\n  };\n\n  zipDownloadFolder = (e) => {\n    e.preventDefault();\n    this.props.zipDownloadFolder.bind(this, this.props.item.folder_path)();\n  };\n\n  handleFileClick = (e) => {\n    const item = this.props.item;\n    if (!Utils.imageCheck(item.file_name)) {\n      return;\n    }\n\n    e.preventDefault();\n    this.props.showImagePopup(item);\n  };\n\n  toggleItemSelected = (e) => {\n    this.props.toggleItemSelected(this.props.item, e.target.checked);\n  };\n\n  render() {\n    const { item, isDesktop } = this.props;\n    const { isIconShown } = this.state;\n\n    let toolTipID = '';\n    let tagTitle = '';\n    if (item.file_tags && item.file_tags.length > 0) {\n      toolTipID = MD5(item.file_name).slice(0, 7);\n      tagTitle = item.file_tags.map(item => item.tag_name).join(' ');\n    }\n\n    if (item.is_dir) {\n      return isDesktop ? (\n        <tr onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut} onFocus={this.handleMouseOver}>\n          {showDownloadIcon &&\n            <td className=\"text-center\">\n              <input type=\"checkbox\" checked={item.isSelected} onChange={this.toggleItemSelected} />\n            </td>\n          }\n          <td className=\"text-center\"><img src={Utils.getFolderIconUrl()} alt=\"\" width=\"24\" /></td>\n          <td>\n            <a href={`?p=${encodeURIComponent(item.folder_path.substr(0, item.folder_path.length - 1))}&mode=${mode}`}>{item.folder_name}</a>\n          </td>\n          <td></td>\n          <td></td>\n          <td title={moment(item.last_modified).format('llll')}>{moment(item.last_modified).fromNow()}</td>\n          <td>\n            {showDownloadIcon &&\n            <a role=\"button\" className={`action-icon sf2-icon-download${isIconShown ? '' : ' invisible'}`} href=\"#\" onClick={this.zipDownloadFolder} title={gettext('Download')} aria-label={gettext('Download')}>\n            </a>\n            }\n          </td>\n        </tr>\n      ) : (\n        <tr>\n          <td className=\"text-center\"><img src={Utils.getFolderIconUrl()} alt=\"\" width=\"24\" /></td>\n          <td>\n            <a href={`?p=${encodeURIComponent(item.folder_path.substr(0, item.folder_path.length - 1))}&mode=${mode}`}>{item.folder_name}</a>\n            <br />\n            <span className=\"item-meta-info\">{moment(item.last_modified).fromNow()}</span>\n          </td>\n          <td>\n            {showDownloadIcon &&\n            <Dropdown isOpen={this.state.isOpMenuOpen} toggle={this.toggleOpMenu}>\n              <DropdownToggle\n                tag=\"i\"\n                className=\"sf-dropdown-toggle fa fa-ellipsis-v ml-0\"\n                title={gettext('More Operations')}\n                data-toggle=\"dropdown\"\n                aria-expanded={this.state.isOpMenuOpen}\n              />\n              <div className={this.state.isOpMenuOpen ? '' : 'd-none'} onClick={this.toggleOpMenu}>\n                <div className=\"mobile-operation-menu-bg-layer\"></div>\n                <div className=\"mobile-operation-menu\">\n                  <DropdownItem className=\"mobile-menu-item\" onClick={this.zipDownloadFolder}>{gettext('Download')}</DropdownItem>\n                </div>\n              </div>\n            </Dropdown>\n            }\n          </td>\n        </tr>\n      );\n    } else {\n      const fileURL = `${siteRoot}d/${token}/files/?p=${encodeURIComponent(item.file_path)}`;\n      const thumbnailURL = item.encoded_thumbnail_src ? `${siteRoot}${item.encoded_thumbnail_src}` : '';\n      return isDesktop ? (\n        <tr onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut} onFocus={this.handleMouseOver}>\n          {showDownloadIcon &&\n            <td className=\"text-center\">\n              <input type=\"checkbox\" checked={item.isSelected} onChange={this.toggleItemSelected} />\n            </td>\n          }\n          <td className=\"text-center\">\n            {thumbnailURL ?\n              <img className=\"thumbnail\" src={thumbnailURL} alt=\"\" /> :\n              <img src={Utils.getFileIconUrl(item.file_name)} alt=\"\" width=\"24\" />\n            }\n          </td>\n          <td>\n            <a href={fileURL} onClick={this.handleFileClick}>{item.file_name}</a>\n          </td>\n          <td className=\"tag-list-title\">\n            {(item.file_tags && item.file_tags.length > 0) && (\n              <Fragment>\n                <div id={`tag-list-title-${toolTipID}`} className=\"dirent-item tag-list tag-list-stacked\">\n                  {item.file_tags.map((fileTag, index) => {\n                    let length = item.file_tags.length;\n                    return (\n                      <span className=\"file-tag\" key={fileTag.file_tag_id} style={{zIndex:length - index, backgroundColor:fileTag.tag_color}}></span>\n                    );\n                  })}\n                </div>\n                <UncontrolledTooltip target={`tag-list-title-${toolTipID}`} placement=\"bottom\">\n                  {tagTitle}\n                </UncontrolledTooltip>\n              </Fragment>\n            )}\n          </td>\n          <td>{Utils.bytesToSize(item.size)}</td>\n          <td title={moment(item.last_modified).format('llll')}>{moment(item.last_modified).fromNow()}</td>\n          <td>\n            {showDownloadIcon &&\n            <a className={`action-icon sf2-icon-download${isIconShown ? '' : ' invisible'}`} href={`${fileURL}&dl=1`} title={gettext('Download')} aria-label={gettext('Download')}></a>\n            }\n          </td>\n        </tr>\n      ) : (\n        <tr>\n          <td className=\"text-center\">\n            {thumbnailURL ?\n              <img className=\"thumbnail\" src={thumbnailURL} alt=\"\" /> :\n              <img src={Utils.getFileIconUrl(item.file_name)} alt=\"\" width=\"24\" />\n            }\n          </td>\n          <td>\n            <a href={fileURL} onClick={this.handleFileClick}>{item.file_name}</a>\n            <br />\n            <span className=\"item-meta-info\">{Utils.bytesToSize(item.size)}</span>\n            <span className=\"item-meta-info\">{moment(item.last_modified).fromNow()}</span>\n          </td>\n          <td>\n            {showDownloadIcon &&\n            <Dropdown isOpen={this.state.isOpMenuOpen} toggle={this.toggleOpMenu}>\n              <DropdownToggle\n                tag=\"i\"\n                className=\"sf-dropdown-toggle fa fa-ellipsis-v ml-0\"\n                title={gettext('More Operations')}\n                data-toggle=\"dropdown\"\n                aria-expanded={this.state.isOpMenuOpen}\n              />\n              <div className={this.state.isOpMenuOpen ? '' : 'd-none'} onClick={this.toggleOpMenu}>\n                <div className=\"mobile-operation-menu-bg-layer\"></div>\n                <div className=\"mobile-operation-menu\">\n                  <DropdownItem className=\"mobile-menu-item\" tag=\"a\" href={`${fileURL}&dl=1`}>{gettext('Download')}</DropdownItem>\n                </div>\n              </div>\n            </Dropdown>\n            }\n          </td>\n        </tr>\n      );\n    }\n  }\n}\n\nItem.propTypes = {\n  isDesktop: PropTypes.bool.isRequired,\n  item: PropTypes.object.isRequired,\n  sortItems: PropTypes.func.isRequired,\n  sortBy: PropTypes.string.isRequired,\n  sortOrder: PropTypes.string.isRequired,\n  toggleAllSelected: PropTypes.func.isRequired,\n  toggleItemSelected: PropTypes.func.isRequired,\n  zipDownloadFolder: PropTypes.func.isRequired,\n  showImagePopup: PropTypes.func.isRequired,\n};\n\nclass GridItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isIconShown: false\n    };\n  }\n\n  handleMouseOver = () => {\n    this.setState({isIconShown: true});\n  };\n\n  handleMouseOut = () => {\n    this.setState({isIconShown: false});\n  };\n\n  zipDownloadFolder = (e) => {\n    e.preventDefault();\n    this.props.zipDownloadFolder.bind(this, this.props.item.folder_path)();\n  };\n\n  handleFileClick = (e) => {\n    const item = this.props.item;\n    if (!Utils.imageCheck(item.file_name)) {\n      return;\n    }\n\n    e.preventDefault();\n    this.props.showImagePopup(item);\n  };\n\n  render() {\n    const item = this.props.item;\n    const { isIconShown } = this.state;\n\n    if (item.is_dir) {\n      const folderURL = `?p=${encodeURIComponent(item.folder_path.substr(0, item.folder_path.length - 1))}&mode=${mode}`;\n      return (\n        <li className=\"grid-item\" onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut} onFocus={this.handleMouseOver}>\n          <a href={folderURL} className=\"grid-file-img-link d-block\">\n            <img src={Utils.getFolderIconUrl(false, 192)} alt=\"\" width=\"96\" height=\"96\" />\n          </a>\n          <a href={folderURL} className=\"grid-file-name grid-file-name-link\">{item.folder_name}</a>\n          {showDownloadIcon &&\n            <a role=\"button\" className={`action-icon sf2-icon-download${isIconShown ? '' : ' invisible'}`} href=\"#\" onClick={this.zipDownloadFolder} title={gettext('Download')} aria-label={gettext('Download')}>\n            </a>\n          }\n        </li>\n      );\n    } else {\n      const fileURL = `${siteRoot}d/${token}/files/?p=${encodeURIComponent(item.file_path)}`;\n      const thumbnailURL = item.encoded_thumbnail_src ? `${siteRoot}${item.encoded_thumbnail_src}` : '';\n      return (\n        <li className=\"grid-item\" onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut} onFocus={this.handleMouseOver}>\n          <a href={fileURL} className=\"grid-file-img-link d-block\" onClick={this.handleFileClick}>\n            {thumbnailURL ?\n              <img className=\"thumbnail\" src={thumbnailURL} alt=\"\" /> :\n              <img src={Utils.getFileIconUrl(item.file_name, 192)} alt=\"\" width=\"96\" height=\"96\" />\n            }\n          </a>\n          <a href={fileURL} className=\"grid-file-name grid-file-name-link\" onClick={this.handleFileClick}>{item.file_name}</a>\n          {showDownloadIcon &&\n            <a className={`action-icon sf2-icon-download${isIconShown ? '' : ' invisible'}`} href={`${fileURL}&dl=1`} title={gettext('Download')} aria-label={gettext('Download')}>\n            </a>\n          }\n        </li>\n      );\n    }\n  }\n}\n\nGridItem.propTypes = {\n  item: PropTypes.object.isRequired,\n  zipDownloadFolder: PropTypes.func.isRequired,\n  showImagePopup: PropTypes.func.isRequired,\n};\n\nReactDom.render(<SharedDirView />, document.getElementById('wrapper'));\n"],"names":["CopyMoveDirentProgressDialog","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_this$props","this","props","type","asyncOperationProgress","asyncOperatedFilesLength","title","gettext","replace","progressStyle","width","lineHeight","textAlign","_jsxs","Modal","isOpen","children","_jsx","ModalHeader","toggle","toggleDialog","ModalBody","style","minHeight","className","height","role","React","ImageDialog","imageItems","imageIndex","imageItemsLength","length","name","imageTitle","concat","Lightbox","mainSrc","src","nextSrc","prevSrc","onCloseRequest","closeImagePopup","onMovePrevRequest","moveToPrevImage","onMoveNextRequest","moveToNextImage","imagePadding","imageLoadErrorMessage","prevLabel","nextLabel","closeLabel","zoomInLabel","zoomOutLabel","interval","ZipDownloadDialog","_this","call","queryZipProgress","zipToken","state","seafileAPI","then","res","data","failed","clearInterval","setState","isLoading","errorMsg","failed_reason","zipProgress","total","zipped","toFixed","location","href","fileServerRoot","catch","error","Utils","getErrorMsg","cancelZipTask","_this2","token","path","repoID","target","getShareLinkDirentsZipTask","getShareLinkZipTask","zipDownload","setInterval","Content","_React$Component2","_super2","_this$props$data","Loading","ListTaggedFilesDialog","onFileTagChanged","TaggedFile","parent_path","dirent","filename","direntPath","onDeleteTaggedFile","taggedFile","fileTagID","file_tag_id","deleteFileTag","getTaggedFiles","updateUsedRepoTags","file_deleted","errMessage","toaster","danger","currentTag","shareLinkToken","getShareLinkTaggedFiles","id","listTaggedFiles","taggedFileList","undefined","tagged_files","forEach","file","push","maxWidth","onClose","map","index","enableFileDownload","ModalFooter","Button","color","onClick","toggleCancel","_this3","onMouseEnter","active","onMouseLeave","deleteFile","e","preventDefault","_this$props2","joinPath","siteRoot","encodePath","onFocus","Fragment","colSpan","rel","bytesToSize","size","moment","mtime","fromNow","Draft","item","created","created_at","createdStr","Date","getTime","format","ownerNickname","owner_nickname","originRepoID","origin_repo_id","draftFilePath","draft_file_path","ListRepoDraftsDialog","onDeleteDraftItem","draft","editorUtilities","deleteDraft","drafts","filter","msg","success","listRepoDrafts","DraftItem","draftItem","_this4","getFileName","bind","ReadmeDialog","readmeContent","getFileDownloadLink","filePath","getFileContent","fileName","MarkdownViewer","markdownContent","showTOC","scriptSource","mediaUrl","RepoInfoBar","onListTaggedFiles","isListTaggedFileShow","onCloseDialog","toggleDrafts","showRepoDrafts","toggleReadme","showReadmeDialog","currentPath","usedRepoTags","readmeMarkdown","draftCounts","usedRepoTag","backgroundColor","fileCount","parseInt","ModalPortal","UPLOAD_UPLOADING","UPLOAD_ERROR","UPLOAD_ISSAVING","UPLOAD_UPLOADED","UploadListItem","onUploadCancel","resumableFile","onUploadRetry","formatFileSize","uploadState","nextProps","remainingTime","isSaved","progress","Math","round","newFileName","isUploading","formatTime","dangerouslySetInnerHTML","__html","ForbidUploadListItem","maxUploadFileSize","UploadProgressDialog","onCancelAllUploading","onMinimizeUpload","nativeEvent","stopImmediatePropagation","isMinimized","onCloseUpload","onCloseUploadDialog","uploadBitrate","formatBitRate","uploadedMessage","uploadingMessage","totalProgress","uploadingOptions","uploadedOptions","allFilesUploaded","retryFileList","onUploadRetryAll","forbidUploadFileList","uploadFileList","FileUploader","componentWillUnmount","window","onbeforeunload","dragAndDrop","resumable","disableDropOnDocument","uploader","isUploadProgressDialogShow","bindCallbackHandler","minFileSizeErrorCallback","fileTypeErrorCallback","maxFilesErrorCallback","opts","maxFileSizeErrorCallback","bindEventHandler","on","onChunkingComplete","_assertThisInitialized","onFileAdded","filesAddedComplete","onFileProgress","onFileUploadSuccess","onProgress","onComplete","onPause","onFileRetry","onFileError","onError","onBeforeCancel","onCancel","onDragStart","files","errorCount","maxFiles","maxNumberOfFilesForFileupload","message","relativePath","isFile","formData","parent_dir","relative_path","slice","lastIndexOf","setUploadFileList","sharedLinkGetFileUploadUrl","upload_link","resumableUpload","isUploadLinkLoaded","_this$props3","upload","_this$props4","getFileUploadedBytes","uploadedBytes","blockSize","resumableUploadFileBlockSize","offset","floor","markChunksCompleted","registerGlobalVariable","getBitrate","uniqueIdentifier","lastSize","time","loaded","now","timestamp","timeDiff","bitrateInterval","currentTime","JSON","parse","errorMessage","notifiedFolders","setHeaders","chunkSize","getOpt","fileSize","startByte","endByte","min","encodeURI","setQuery","generateUniqueIdentifier","webkitRelativePath","MD5","stopPropagation","onFileUpload","uploadInput","current","removeAttribute","click","onFolderUpload","setAttribute","uploadingItem","cancel","_this$props5","retryUploadFile","_this$props6","_this$props7","bootstrap","firedRetry","resumableObj","uploadFile","_this$props8","isUploadRemindDialogShow","_toConsumableArray","cancelFileUpload","pop","currentResumableFile","Resumablejs","query","fileType","filetypes","maxFileSize","testMethod","testChunks","headers","withCredentials","simultaneousUploads","fileParameterName","forceChunkSize","maxChunkRetries","minFileSize","assignBrowse","enableDropOnDocument","ref","SaveSharedDirDialog","onSaveSharedFile","handleSaveSharedDir","repo","repo_id","selectedPath","onDirentItemClick","onRepoItemClick","FileChooser","isShowFile","mode","Alert","disabled","app","config","lang","loginUser","pageOptions","_window$shared$pageOp","shared","dirName","dirPath","sharedBy","thumbnailSize","trafficOverLimit","canDownload","noQuota","canUpload","enableVideoThumbnail","showDownloadIcon","SharedDirView","sortItems","sortBy","sortOrder","items","sortDirentsInSharedDir","getThumbnails","is_dir","imageCheck","file_name","videoCheck","encoded_thumbnail_src","len","getThumbnail","i","curItem","getShareLinkThumbnail","file_path","renderPath","encodeURIComponent","zipDownloadFolder","folderPath","useGoFileserver","isZipDialogOpen","zipFolderPath","zipDownloadSelectedItems","isSelected","folder_name","selectedItems","saveSelectedItems","isSaveSharedDirDialogShow","itemsForSave","saveAllItems","toggleSaveSharedDirCancel","destRepoID","dstPath","saveSharedDir","isCopyMoveProgressDialogShow","asyncCopyMoveTaskId","task_id","getAsyncCopyMoveProgress","onProgressDialogToggle","taskId","cancelCopyMoveOperation","closeZipDialog","prepareImageItem","isGIF","substr","toLowerCase","fileURL","thumbnailSizeForOriginal","showImagePopup","isImagePopupOpen","indexOf","prevState","toggleAllSelected","isAllItemsSelected","toggleItemSelected","targetItem","some","onUploadFile","direntObject","newItem","last_modified","folderItems","Array","from","splice","shareLinksUploadDone","getShareLinkRepoTags","repo_tags","RepoTag","isRepoInfoBarShow","duration","listSharedDir","_getAsyncCopyMoveProgress","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_message","wrap","_context","prev","next","queryAsyncOperationProgress","sent","abrupt","successful","done","t0","stop","isDesktop","modeBaseClass","logoPath","logoHeight","logoWidth","siteTitle","alt","Account","sharedToken","parentDir","_this5","sortByName","sortByTime","sortBySize","_this6","tbody","Item","sortIcon","checked","onChange","GridItem","_React$Component3","_super3","_this7","toggleOpMenu","isOpMenuOpen","handleMouseOver","isIconShown","handleMouseOut","folder_path","handleFileClick","toolTipID","tagTitle","file_tags","tag_name","join","onMouseOver","onMouseOut","getFolderIconUrl","Dropdown","DropdownToggle","tag","DropdownItem","thumbnailURL","getFileIconUrl","fileTag","zIndex","tag_color","UncontrolledTooltip","placement","_React$Component4","_super4","_this8","folderURL","ReactDom","document","getElementById"],"sourceRoot":""}